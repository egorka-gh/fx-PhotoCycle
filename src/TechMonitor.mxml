<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"

					   showStatusBar="false"
					   creationComplete="{initApp()}" xmlns:view="com.photodispatcher.view.*" 
					   >
	
	<fx:Script>
		<![CDATA[
			import com.photodispatcher.model.Source;
			import com.photodispatcher.model.SourceType;
			import com.photodispatcher.model.TechPoint;
			import com.photodispatcher.model.dao.BaseDAO;
			import com.photodispatcher.model.dao.DictionaryDAO;
			import com.photodispatcher.model.dao.OrderStateDAO;
			import com.photodispatcher.model.dao.SourceTypeDAO;
			import com.photodispatcher.model.dao.TechPointDAO;
			import com.photodispatcher.util.ArrayUtil;
			import com.photodispatcher.view.config.DatabasePopup;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.PopUpEvent;
			
			[Bindable]
			private var techPiontsAC:ArrayCollection;

			[Bindable]
			private var techPointObj:TechPoint;
			private var techPoint:int;

			[Bindable]
			private var startTechTypeIdx:int;
			private var startTechType:int;
			[Bindable]
			private var manualAdd:Boolean;
			[Bindable]
			private var endTechTypeIdx:int;
			private var endTechType:int;
			[Bindable]
			private var yelloyState:Boolean;
			/*
			[Bindable]
			private var compliteTechTypeIdx:int;
			private var compliteTechType:int;
			*/
			[Bindable]
			private var refreshInterval:int;
			
			private var bdPopup:DatabasePopup;
			private function initApp():void{
				bdPopup= new DatabasePopup();
				bdPopup.addEventListener(PopUpEvent.CLOSE,bdPopClose);
				bdPopup.chekConnect(SQLMode.UPDATE,false);
			}
			private function bdPopClose(e:PopUpEvent):void{
				if(e.commit){
					//connected
					init();
					//if(vMonitor) vMonitor.start();
				}else{
					//no connection
					currentState='disconnected';
					bdPopup.open(null);
				}
			}
			
			[Bindable]
			private var techTypeAC:ArrayCollection;
			
			private function init():void{
				OrderStateDAO.initStateMap();
				var dao:TechPointDAO=new TechPointDAO();
				techPiontsAC=dao.findAll();
				
				//var dDao:DictionaryDAO=new DictionaryDAO();
				var stDao:SourceTypeDAO= new SourceTypeDAO();
				techTypeAC=stDao.findAll(Source.LOCATION_TYPE_TECH_POINT);

				var so:SharedObject = SharedObject.getLocal('appProps','/');
				if (so.size>0){
					techPoint=so.data.monitorTechPoint;
					startTechType=so.data.startTechType;
					manualAdd=Boolean(so.data.manualAdd);
					endTechType=so.data.endTechType;
					yelloyState=Boolean(so.data.yelloyState);
					//compliteTechType=so.data.compliteTechType;
					refreshInterval=so.data.refreshInterval;
				}
				if(startTechType) startTechTypeIdx=ArrayUtil.searchItemIdx('id',startTechType,techTypeAC.source);
				if(endTechType) endTechTypeIdx=ArrayUtil.searchItemIdx('id',endTechType,techTypeAC.source);
				if(techPoint) techPointObj=ArrayUtil.searchItem('id',techPoint,techPiontsAC.source) as TechPoint;
				//if(compliteTechType) compliteTechTypeIdx=ArrayUtil.searchItemIdx('value',compliteTechType,techTypeAC.source);

				currentState='config';
			}

			protected function ddStartTechType_changeHandler(event:IndexChangeEvent):void{
				var st:SourceType= ddStartTechType.selectedItem as SourceType;
				if (!st) return;
				startTechType=st.id;
				var so:SharedObject = SharedObject.getLocal('appProps','/');
				so.data.startTechType = startTechType;
				so.flush();  
			}
			
			protected function tgManualAdd_changeHandler(event:Event):void{
				manualAdd=tgManualAdd.selected;
				var so:SharedObject = SharedObject.getLocal('appProps','/');
				so.data.manualAdd = manualAdd;
				so.flush();  
			}
			
			protected function ddEndTechType_changeHandler(event:IndexChangeEvent):void{
				var st:SourceType= ddEndTechType.selectedItem as SourceType;
				if (!st) return;
				endTechType=st.id;
				var so:SharedObject = SharedObject.getLocal('appProps','/');
				so.data.endTechType = endTechType;
				so.flush();  
			}
			
			/*
			protected function tgYelloyState_changeHandler(event:Event):void{
				yelloyState=tgYelloyState.selected;
				var so:SharedObject = SharedObject.getLocal('appProps','/');
				so.data.yelloyState = yelloyState;
				so.flush();  
			}
			*/
			/*
			protected function ddCompliteTechType_changeHandler(event:IndexChangeEvent):void{
				var tp:FieldValue= ddCompliteTechType.selectedItem as FieldValue;
				if (!tp) return;
				compliteTechType=tp.value;
				var so:SharedObject = SharedObject.getLocal('appProps','/');
				so.data.compliteTechType = compliteTechType;
				so.flush();  
			}
			*/
			
			protected function numericstepper1_changeHandler(event:Event):void{
				refreshInterval=nsRefresh.value;
				var so:SharedObject = SharedObject.getLocal('appProps','/');
				so.data.refreshInterval = refreshInterval;
				so.flush();  
			}
			
			protected function ddTechPoint_changeHandler(event:IndexChangeEvent):void{
				techPointObj= ddTechPoint.selectedItem as TechPoint;
				if(techPointObj){
					var so:SharedObject = SharedObject.getLocal('appProps','/');
					so.data.monitorTechPoint = techPointObj.id;
					so.flush();  
				}
			}
			
			protected function button1_clickHandler(event:MouseEvent):void{
				var startTT:SourceType=ddStartTechType.selectedItem as SourceType;
				var endTT:SourceType=ddEndTechType.selectedItem as SourceType;
				if(!techPointObj || !startTT ||!endTT){
					Alert.show('Монитор не настроен');
					return;
				}
				/*
				techMonitor.techPoint=techPointObj;
				techMonitor.startTechType=startTT;
				techMonitor.manualAdd=manualAdd;
				techMonitor.endTechType=endTT;
				techMonitor.refreshInterval=refreshInterval;
				techMonitor.start();
				*/
				currentState='monitor';
			}
			
			protected function button2_clickHandler(event:MouseEvent):void{
				if(techMonitor) techMonitor.stop();
				currentState='config';
			}
			
			protected function state1_enterStateHandler(event:FlexEvent):void{
				var startTT:SourceType=ddStartTechType.selectedItem as SourceType;
				var endTT:SourceType=ddEndTechType.selectedItem as SourceType;
				techMonitor.techPoint=techPointObj;
				techMonitor.startTechType=startTT;
				techMonitor.manualAdd=manualAdd;
				techMonitor.endTechType=endTT;
				techMonitor.refreshInterval=refreshInterval;
				techMonitor.start();
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="disconnected"/>
		<s:State name="config"/>
		<s:State name="monitor" enterState="state1_enterStateHandler(event)"/>
	</s:states>
	
	<s:Rect top="0" left="0" right="0" bottom="0">
		<s:fill>
			<s:SolidColor color="#cccccc"/>
		</s:fill>
	</s:Rect>

	<s:Button label="Выбрать БД" includeIn="disconnected,config" click="{bdPopup.open(null)}"
			  top="5" right="5"/>
	
	<s:VGroup  includeIn="config" gap="5" top="20" left="20" right="5" bottom="50">
		<s:HGroup gap="5" verticalAlign="baseline">
			<s:Label id="lbLong"  text="Технологическая точка:"/>
			<s:DropDownList id="ddTechPoint" dataProvider="{techPiontsAC}" selectedItem="{techPointObj}" 
							labelField="name"  width="250" change="ddTechPoint_changeHandler(event)"/>
		</s:HGroup>

		<s:Spacer height="10"/>
		<s:HGroup id="gStartTT" gap="5" verticalAlign="baseline">
			<s:Label text="Базовая операция" width="{lbLong.width}"/>
			<s:DropDownList id="ddStartTechType" selectedIndex="{startTechTypeIdx}" dataProvider="{techTypeAC}" labelField="name"
							change="ddStartTechType_changeHandler(event)" width="200"/>
		</s:HGroup>
		<s:HGroup gap="0" verticalAlign="baseline" paddingLeft="20">
			<s:CheckBox id="tgManualAdd" selected="@{manualAdd}" change="tgManualAdd_changeHandler(event)"/>
			<s:Label text="Ручное добавление"/>
		</s:HGroup>
		
		<s:Spacer height="10"/>
		<s:HGroup id="gEndTT" gap="5" verticalAlign="baseline">
			<s:Label text="Ожидать операцию" width="{lbLong.width}"/>
			<s:DropDownList id="ddEndTechType" selectedIndex="{endTechTypeIdx}" dataProvider="{techTypeAC}"  labelField="name"
							change="ddEndTechType_changeHandler(event)" width="200"/>
		</s:HGroup>
		<!--<s:HGroup gap="0" verticalAlign="baseline" paddingLeft="20">
			<s:CheckBox id="tgYelloyState" selected="@{yelloyState}" change="tgYelloyState_changeHandler(event)"/>
			<s:Label text="Проверять начало операции (желтый статус)"/>
		</s:HGroup>-->

		<!--<s:Spacer height="10"/>
		<s:HGroup gap="5" verticalAlign="baseline">
			<s:Label id="lbLong" text="Выполнен - операция"/>
			<s:DropDownList id="ddCompliteTechType" selectedIndex="{compliteTechTypeIdx}" dataProvider="{techTypeAC}" 
							change="ddCompliteTechType_changeHandler(event)" width="200"/>
		</s:HGroup>-->

		<s:Spacer height="10"/>
		<s:HGroup gap="5" verticalAlign="baseline">
			<s:Label text="Интервал обновления (мин)"/>
			<s:NumericStepper id="nsRefresh" value="@{refreshInterval}" change="numericstepper1_changeHandler(event)" 
							   minimum="10" maximum="200" snapInterval="1" width="50"/>
		</s:HGroup>
	</s:VGroup>
	
	<view:TechMonitorMonitor id="techMonitor" includeIn="monitor" top="20" left="20" right="5" bottom="50"/>
	
	<s:HGroup bottom="5" width="100%" gap="10" paddingRight="10" paddingLeft="10" verticalAlign="middle">
		<s:Image source="{BaseDAO.isBusy?'assets/database_green.png':'assets/database_grey.png'}" width="24" height="24" toolTip="Запись в базу данных"/>
		<s:Group width="5">
			<s:Label text="{BaseDAO.lastErrMsg}" color="#cc0000"/>
		</s:Group>
		<s:Spacer width="100%"/>
		<s:Button label="Конфигурация" includeIn="monitor" click="button2_clickHandler(event)"/>
		<s:Button label="Монитор" includeIn="config" click="button1_clickHandler(event)"/>
		<s:Button label="Закрыть" click="{FlexGlobals.topLevelApplication.exit()}" />
	</s:HGroup>

</s:WindowedApplication>
