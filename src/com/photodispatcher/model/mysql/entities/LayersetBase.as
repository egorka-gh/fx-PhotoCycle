/**
 * Generated by Gas3 v2.3.2 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (Layerset.as).
 */

package com.photodispatcher.model.mysql.entities {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import mx.collections.ListCollectionView;
    import org.granite.tide.IPropertyHolder;

    [Bindable]
    public class LayersetBase extends AbstractEntity {

        private var _book_type:int;
        private var _book_type_name:String;
        private var _id:int;
        private var _is_book_check_off:Boolean;
        private var _is_epaper_check_off:Boolean;
        private var _is_passover:Boolean;
        private var _is_pdf:Boolean;
        private var _layerset_group:int;
        private var _name:String;
        private var _sequenceEnd:ListCollectionView;
        private var _sequenceMiddle:ListCollectionView;
        private var _sequenceStart:ListCollectionView;
        private var _subset_type:int;
        private var _synonyms:ListCollectionView;
        private var _usesEndPaper:Boolean;

        public function set book_type(value:int):void {
            _book_type = value;
        }
        public function get book_type():int {
            return _book_type;
        }

        public function set book_type_name(value:String):void {
            _book_type_name = value;
        }
        public function get book_type_name():String {
            return _book_type_name;
        }

        public function set id(value:int):void {
            _id = value;
        }
        public function get id():int {
            return _id;
        }

        public function set is_book_check_off(value:Boolean):void {
            _is_book_check_off = value;
        }
        public function get is_book_check_off():Boolean {
            return _is_book_check_off;
        }

        public function set is_epaper_check_off(value:Boolean):void {
            _is_epaper_check_off = value;
        }
        public function get is_epaper_check_off():Boolean {
            return _is_epaper_check_off;
        }

        public function set is_passover(value:Boolean):void {
            _is_passover = value;
        }
        public function get is_passover():Boolean {
            return _is_passover;
        }

        public function set is_pdf(value:Boolean):void {
            _is_pdf = value;
        }
        public function get is_pdf():Boolean {
            return _is_pdf;
        }

        public function set layerset_group(value:int):void {
            _layerset_group = value;
        }
        public function get layerset_group():int {
            return _layerset_group;
        }

        public function set name(value:String):void {
            _name = value;
        }
        public function get name():String {
            return _name;
        }

        public function set sequenceEnd(value:ListCollectionView):void {
            _sequenceEnd = value;
        }
        public function get sequenceEnd():ListCollectionView {
            return _sequenceEnd;
        }

        public function set sequenceMiddle(value:ListCollectionView):void {
            _sequenceMiddle = value;
        }
        public function get sequenceMiddle():ListCollectionView {
            return _sequenceMiddle;
        }

        public function set sequenceStart(value:ListCollectionView):void {
            _sequenceStart = value;
        }
        public function get sequenceStart():ListCollectionView {
            return _sequenceStart;
        }

        public function set subset_type(value:int):void {
            _subset_type = value;
        }
        public function get subset_type():int {
            return _subset_type;
        }

        public function set synonyms(value:ListCollectionView):void {
            _synonyms = value;
        }
        public function get synonyms():ListCollectionView {
            return _synonyms;
        }

        public function set usesEndPaper(value:Boolean):void {
            _usesEndPaper = value;
        }
        public function get usesEndPaper():Boolean {
            return _usesEndPaper;
        }

        public override function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _book_type = input.readObject() as int;
            _book_type_name = input.readObject() as String;
            _id = input.readObject() as int;
            _is_book_check_off = input.readObject() as Boolean;
            _is_epaper_check_off = input.readObject() as Boolean;
            _is_passover = input.readObject() as Boolean;
            _is_pdf = input.readObject() as Boolean;
            _layerset_group = input.readObject() as int;
            _name = input.readObject() as String;
            _sequenceEnd = input.readObject() as ListCollectionView;
            _sequenceMiddle = input.readObject() as ListCollectionView;
            _sequenceStart = input.readObject() as ListCollectionView;
            _subset_type = input.readObject() as int;
            _synonyms = input.readObject() as ListCollectionView;
            _usesEndPaper = input.readObject() as Boolean;
        }

        public override function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject((_book_type is IPropertyHolder) ? IPropertyHolder(_book_type).object : _book_type);
            output.writeObject((_book_type_name is IPropertyHolder) ? IPropertyHolder(_book_type_name).object : _book_type_name);
            output.writeObject((_id is IPropertyHolder) ? IPropertyHolder(_id).object : _id);
            output.writeObject((_is_book_check_off is IPropertyHolder) ? IPropertyHolder(_is_book_check_off).object : _is_book_check_off);
            output.writeObject((_is_epaper_check_off is IPropertyHolder) ? IPropertyHolder(_is_epaper_check_off).object : _is_epaper_check_off);
            output.writeObject((_is_passover is IPropertyHolder) ? IPropertyHolder(_is_passover).object : _is_passover);
            output.writeObject((_is_pdf is IPropertyHolder) ? IPropertyHolder(_is_pdf).object : _is_pdf);
            output.writeObject((_layerset_group is IPropertyHolder) ? IPropertyHolder(_layerset_group).object : _layerset_group);
            output.writeObject((_name is IPropertyHolder) ? IPropertyHolder(_name).object : _name);
            output.writeObject((_sequenceEnd is IPropertyHolder) ? IPropertyHolder(_sequenceEnd).object : _sequenceEnd);
            output.writeObject((_sequenceMiddle is IPropertyHolder) ? IPropertyHolder(_sequenceMiddle).object : _sequenceMiddle);
            output.writeObject((_sequenceStart is IPropertyHolder) ? IPropertyHolder(_sequenceStart).object : _sequenceStart);
            output.writeObject((_subset_type is IPropertyHolder) ? IPropertyHolder(_subset_type).object : _subset_type);
            output.writeObject((_synonyms is IPropertyHolder) ? IPropertyHolder(_synonyms).object : _synonyms);
            output.writeObject((_usesEndPaper is IPropertyHolder) ? IPropertyHolder(_usesEndPaper).object : _usesEndPaper);
        }
    }
}