/**
 * Generated by Gas3 v3.1.0 (Granite Data Services).
 *
 * NOTE: this file is only generated if it does not exist. You may safely put
 * your custom code here.
 */

package com.photodispatcher.model.mysql.entities {
	import com.photodispatcher.view.itemRenderer.BooleanGridRenderer;
	
	import flash.globalization.DateTimeStyle;
	
	import mx.collections.ArrayCollection;
	import mx.collections.ArrayList;
	import mx.core.ClassFactory;
	
	import spark.components.gridClasses.GridColumn;
	import spark.formatters.DateTimeFormatter;

    [Bindable]
    [RemoteClass(alias="com.photodispatcher.model.mysql.entities.MailPackage")]
    public class MailPackage extends MailPackageBase {

		public var rawMessages:String;

        public function MailPackage() {
            super();
			state=OrderState.TECH_OTK;
        }
		
		override public function set state(value:int):void{
			super.state = value;
			if(super.state != value){
				state_name= OrderState.getStateName(value);
				state_date= new Date();
			}
		}
		
		override public function get state():int{
			return super.state;
		}
		
		public var native_delivery_id:int;

		public var isSelected:Boolean;

		public function getProperty(key:String):String{
			if(!key || !properties || properties.length==0) return '';
			var p:MailPackageProperty;
			for each(p in properties){
				if(p && p.property==key){
					return p.value;
				}
			}
			return '';
		}
		
		
		public static function inQueueColumns():ArrayList{
			var result:ArrayList= new ArrayList();
			
			var col:GridColumn;
			col= new GridColumn('source_name'); col.headerText='Источник'; result.addItem(col);
			col= new GridColumn('source_code'); col.headerText='Код'; col.width=25; result.addItem(col); 
			col= new GridColumn('id'); col.headerText='Группа'; result.addItem(col); 
			col= new GridColumn('client_id'); col.headerText='Клиент'; result.addItem(col); 
			col= new GridColumn('state_name'); col.headerText='Макс статус'; result.addItem(col); 
			col= new GridColumn('min_ord_state_name'); col.headerText='Мин статус'; result.addItem(col); 
			var fmt:DateTimeFormatter=new DateTimeFormatter(); fmt.dateStyle=fmt.timeStyle=DateTimeStyle.SHORT; 
			col= new GridColumn('state_date'); col.headerText='Дата статуса'; col.formatter=fmt;  result.addItem(col);
			col= new GridColumn('orders_num'); col.headerText='Кол заказов'; result.addItem(col); 
			
			/*
			col= new GridColumn('id'); result.addItem(col);
			var fmt:DateTimeFormatter=new DateTimeFormatter(); fmt.dateStyle=fmt.timeStyle=DateTimeStyle.SHORT; 
			col= new GridColumn('src_date'); col.headerText='Размещен'; col.formatter=fmt;  result.addItem(col);
			fmt=new DateTimeFormatter(); fmt.dateStyle=fmt.timeStyle=DateTimeStyle.SHORT; 
			col= new GridColumn('state_date'); col.headerText='Дата статуса'; col.formatter=fmt;  result.addItem(col);
			col= new GridColumn('ftp_folder'); col.headerText='Ftp Папка'; result.addItem(col);
			col= new GridColumn('fotos_num'); col.headerText='Кол фото'; result.addItem(col);
			*/
			return result;
		}

		public static function clientPackagesColumns():ArrayList{
			var result:ArrayList= new ArrayList();
			
			var col:GridColumn;
			col= new GridColumn('isSelected'); col.headerText=' ';  col.itemRenderer=new ClassFactory(BooleanGridRenderer); col.width=70; result.addItem(col); 
			col= new GridColumn('id'); col.headerText='Группа'; col.editable=false; result.addItem(col); 
			col= new GridColumn('state_name'); col.headerText='Макс статус'; col.editable=false; result.addItem(col); 
			col= new GridColumn('min_ord_state_name'); col.headerText='Мин статус'; col.editable=false; result.addItem(col); 
			var fmt:DateTimeFormatter=new DateTimeFormatter(); fmt.dateStyle=fmt.timeStyle=DateTimeStyle.SHORT; 
			col= new GridColumn('state_date'); col.headerText='Дата статуса'; col.formatter=fmt;  col.editable=false; result.addItem(col);
			col= new GridColumn('orders_num'); col.headerText='Кол заказов'; col.editable=false; result.addItem(col); 
			
			return result;
		}

		public function parseMessages():void{
			if(id==0 || source==0 ) return;
			messages= new ArrayCollection();
			_parseMessages(rawMessages);
		}
		
		private function _parseMessages(raw:String):void{
			if(!raw) return;
			var str:String=raw.replace(String.fromCharCode(13),'');
			var arr:Array=str.split(String.fromCharCode(10));
			var subArr:Array;
			var subStr:String;
			var it:MailPackageMessage;
			for each(subStr in arr){
				subArr=subStr.split('|');
				if(subArr && subArr.length>2 && subArr[0]){
					it= new MailPackageMessage();
					it.source= source;
					it.id=id;
					it.log_key=subArr[0];
					it.log_user=subArr[1];
					it.message=subArr[2];
					it.persistState=AbstractEntity.PERSIST_NEW;
					messages.addItem(it);
				}
			}
		}

    }
}