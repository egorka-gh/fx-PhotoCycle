/**
 * Generated by Gas3 v2.3.2 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (TechLog.as).
 */

package com.photodispatcher.model.mysql.entities {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import org.granite.tide.IPropertyHolder;

    [Bindable]
    public class TechLogBase extends AbstractEntity {

        private var _id:int;
        private var _log_date:Date;
        private var _order_id:String;
        private var _print_group:String;
        private var _sheet:int;
        private var _src_id:int;
        private var _sub_id:String;
        private var _tech_point_name:String;
        private var _tech_state:int;
        private var _tech_state_name:String;

        public function set id(value:int):void {
            _id = value;
        }
        public function get id():int {
            return _id;
        }

        public function set log_date(value:Date):void {
            _log_date = value;
        }
        public function get log_date():Date {
            return _log_date;
        }

        public function set order_id(value:String):void {
            _order_id = value;
        }
        public function get order_id():String {
            return _order_id;
        }

        public function set print_group(value:String):void {
            _print_group = value;
        }
        public function get print_group():String {
            return _print_group;
        }

        public function set sheet(value:int):void {
            _sheet = value;
        }
        public function get sheet():int {
            return _sheet;
        }

        public function set src_id(value:int):void {
            _src_id = value;
        }
        public function get src_id():int {
            return _src_id;
        }

        public function set sub_id(value:String):void {
            _sub_id = value;
        }
        public function get sub_id():String {
            return _sub_id;
        }

        public function set tech_point_name(value:String):void {
            _tech_point_name = value;
        }
        public function get tech_point_name():String {
            return _tech_point_name;
        }

        public function set tech_state(value:int):void {
            _tech_state = value;
        }
        public function get tech_state():int {
            return _tech_state;
        }

        public function set tech_state_name(value:String):void {
            _tech_state_name = value;
        }
        public function get tech_state_name():String {
            return _tech_state_name;
        }

        public override function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _id = input.readObject() as int;
            _log_date = input.readObject() as Date;
            _order_id = input.readObject() as String;
            _print_group = input.readObject() as String;
            _sheet = input.readObject() as int;
            _src_id = input.readObject() as int;
            _sub_id = input.readObject() as String;
            _tech_point_name = input.readObject() as String;
            _tech_state = input.readObject() as int;
            _tech_state_name = input.readObject() as String;
        }

        public override function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject((_id is IPropertyHolder) ? IPropertyHolder(_id).object : _id);
            output.writeObject((_log_date is IPropertyHolder) ? IPropertyHolder(_log_date).object : _log_date);
            output.writeObject((_order_id is IPropertyHolder) ? IPropertyHolder(_order_id).object : _order_id);
            output.writeObject((_print_group is IPropertyHolder) ? IPropertyHolder(_print_group).object : _print_group);
            output.writeObject((_sheet is IPropertyHolder) ? IPropertyHolder(_sheet).object : _sheet);
            output.writeObject((_src_id is IPropertyHolder) ? IPropertyHolder(_src_id).object : _src_id);
            output.writeObject((_sub_id is IPropertyHolder) ? IPropertyHolder(_sub_id).object : _sub_id);
            output.writeObject((_tech_point_name is IPropertyHolder) ? IPropertyHolder(_tech_point_name).object : _tech_point_name);
            output.writeObject((_tech_state is IPropertyHolder) ? IPropertyHolder(_tech_state).object : _tech_state);
            output.writeObject((_tech_state_name is IPropertyHolder) ? IPropertyHolder(_tech_state_name).object : _tech_state_name);
        }
    }
}