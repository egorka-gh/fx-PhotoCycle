/**
 * Generated by Gas3 v3.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (MailPackageBox.as).
 */

package com.photodispatcher.model.mysql.entities {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import mx.collections.ListCollectionView;

    [Bindable]
    public class MailPackageBoxBase extends AbstractEntity {

        public function MailPackageBoxBase() {
            super();
        }

        private var _barcode:String;
        private var _books:ListCollectionView;
        private var _boxID:String;
        private var _boxNum:int;
        private var _items:ListCollectionView;
        private var _packageID:int;
        private var _price:Number;
        private var _source:int;
        private var _source_code:String;
        private var _source_name:String;
        private var _state:int;
        private var _state_date:Date;
        private var _state_name:String;
        private var _weight:int;

        public function set barcode(value:String):void {
            _barcode = value;
        }
        public function get barcode():String {
            return _barcode;
        }

        public function set books(value:ListCollectionView):void {
            _books = value;
        }
        public function get books():ListCollectionView {
            return _books;
        }

        public function set boxID(value:String):void {
            _boxID = value;
        }
        public function get boxID():String {
            return _boxID;
        }

        public function set boxNum(value:int):void {
            _boxNum = value;
        }
        public function get boxNum():int {
            return _boxNum;
        }

        public function set items(value:ListCollectionView):void {
            _items = value;
        }
        public function get items():ListCollectionView {
            return _items;
        }

        public function set packageID(value:int):void {
            _packageID = value;
        }
        public function get packageID():int {
            return _packageID;
        }

        public function set price(value:Number):void {
            _price = value;
        }
        public function get price():Number {
            return _price;
        }

        public function set source(value:int):void {
            _source = value;
        }
        public function get source():int {
            return _source;
        }

        public function set source_code(value:String):void {
            _source_code = value;
        }
        public function get source_code():String {
            return _source_code;
        }

        public function set source_name(value:String):void {
            _source_name = value;
        }
        public function get source_name():String {
            return _source_name;
        }

        public function set state(value:int):void {
            _state = value;
        }
        public function get state():int {
            return _state;
        }

        public function set state_date(value:Date):void {
            _state_date = value;
        }
        public function get state_date():Date {
            return _state_date;
        }

        public function set state_name(value:String):void {
            _state_name = value;
        }
        public function get state_name():String {
            return _state_name;
        }

        public function set weight(value:int):void {
            _weight = value;
        }
        public function get weight():int {
            return _weight;
        }

        public override function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _barcode = input.readObject() as String;
            _books = input.readObject() as ListCollectionView;
            _boxID = input.readObject() as String;
            _boxNum = input.readObject() as int;
            _items = input.readObject() as ListCollectionView;
            _packageID = input.readObject() as int;
            _price = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _source = input.readObject() as int;
            _source_code = input.readObject() as String;
            _source_name = input.readObject() as String;
            _state = input.readObject() as int;
            _state_date = input.readObject() as Date;
            _state_name = input.readObject() as String;
            _weight = input.readObject() as int;
        }

        public override function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject(_barcode);
            output.writeObject(_books);
            output.writeObject(_boxID);
            output.writeObject(_boxNum);
            output.writeObject(_items);
            output.writeObject(_packageID);
            output.writeObject(_price);
            output.writeObject(_source);
            output.writeObject(_source_code);
            output.writeObject(_source_name);
            output.writeObject(_state);
            output.writeObject(_state_date);
            output.writeObject(_state_name);
            output.writeObject(_weight);
        }
    }
}