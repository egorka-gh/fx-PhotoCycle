/**
 * Generated by Gas3 v3.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (LabMeter.as).
 */

package com.photodispatcher.model.mysql.entities {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;

    [Bindable]
    public class LabMeterBase extends AbstractEntity {

        public function LabMeterBase() {
            super();
        }

        private var _amt:int;
        private var _device_name:String;
        private var _lab:int;
        private var _lab_device:int;
        private var _lab_name:String;
        private var _last_time:Date;
        private var _meter_type:int;
        private var _print_group:String;
        private var _server_time:Date;
        private var _start_time:Date;
        private var _state:int;
        private var _state_name:String;
        private var _type_name:String;

        public function set amt(value:int):void {
            _amt = value;
        }
        public function get amt():int {
            return _amt;
        }

        public function set device_name(value:String):void {
            _device_name = value;
        }
        public function get device_name():String {
            return _device_name;
        }

        public function set lab(value:int):void {
            _lab = value;
        }
        public function get lab():int {
            return _lab;
        }

        public function set lab_device(value:int):void {
            _lab_device = value;
        }
        public function get lab_device():int {
            return _lab_device;
        }

        public function set lab_name(value:String):void {
            _lab_name = value;
        }
        public function get lab_name():String {
            return _lab_name;
        }

        public function set last_time(value:Date):void {
            _last_time = value;
        }
        public function get last_time():Date {
            return _last_time;
        }

        public function set meter_type(value:int):void {
            _meter_type = value;
        }
        public function get meter_type():int {
            return _meter_type;
        }

        public function set print_group(value:String):void {
            _print_group = value;
        }
        public function get print_group():String {
            return _print_group;
        }

        public function set server_time(value:Date):void {
            _server_time = value;
        }
        public function get server_time():Date {
            return _server_time;
        }

        public function set start_time(value:Date):void {
            _start_time = value;
        }
        public function get start_time():Date {
            return _start_time;
        }

        public function set state(value:int):void {
            _state = value;
        }
        public function get state():int {
            return _state;
        }

        public function set state_name(value:String):void {
            _state_name = value;
        }
        public function get state_name():String {
            return _state_name;
        }

        public function set type_name(value:String):void {
            _type_name = value;
        }
        public function get type_name():String {
            return _type_name;
        }

        public override function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _amt = input.readObject() as int;
            _device_name = input.readObject() as String;
            _lab = input.readObject() as int;
            _lab_device = input.readObject() as int;
            _lab_name = input.readObject() as String;
            _last_time = input.readObject() as Date;
            _meter_type = input.readObject() as int;
            _print_group = input.readObject() as String;
            _server_time = input.readObject() as Date;
            _start_time = input.readObject() as Date;
            _state = input.readObject() as int;
            _state_name = input.readObject() as String;
            _type_name = input.readObject() as String;
        }

        public override function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject(_amt);
            output.writeObject(_device_name);
            output.writeObject(_lab);
            output.writeObject(_lab_device);
            output.writeObject(_lab_name);
            output.writeObject(_last_time);
            output.writeObject(_meter_type);
            output.writeObject(_print_group);
            output.writeObject(_server_time);
            output.writeObject(_start_time);
            output.writeObject(_state);
            output.writeObject(_state_name);
            output.writeObject(_type_name);
        }
    }
}