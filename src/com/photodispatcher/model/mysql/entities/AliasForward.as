/**
 * Generated by Gas3 v3.1.0 (Granite Data Services).
 *
 * NOTE: this file is only generated if it does not exist. You may safely put
 * your custom code here.
 */

package com.photodispatcher.model.mysql.entities {
	import com.photodispatcher.model.mysql.DbLatch;
	import com.photodispatcher.model.mysql.services.ConfigService;
	import com.photodispatcher.util.GridUtil;
	import com.photodispatcher.view.itemRenderer.CBoxGridItemEditor;
	
	import flash.events.Event;
	
	import mx.collections.ArrayList;
	import mx.core.ClassFactory;
	
	import org.granite.tide.Tide;
	
	import spark.components.gridClasses.GridColumn;

    [Bindable]
    [RemoteClass(alias="com.photodispatcher.model.mysql.entities.AliasForward")]
    public class AliasForward extends AliasForwardBase {

		private static var map:Object;
		
		public static function initMap():DbLatch{
			var service:ConfigService=Tide.getInstance().getContext().byType(ConfigService,true) as ConfigService;
			var latch:DbLatch= new DbLatch();
			latch.addEventListener(Event.COMPLETE, onLoad);
			latch.addLatch(service.loadAliasForward());
			latch.start();
			return latch;
		}
		private static function onLoad(event:Event):void{
			var latch:DbLatch= event.target as DbLatch;
			if(latch){
				latch.removeEventListener(Event.COMPLETE,onLoad);
				if(latch.complite){
					var a:Array=latch.lastDataArr;
					if(!a) return;
					var newMap:Object=new Object();
					var subMap:Object;
					var it:AliasForward;
					for each(it in a){
						if(it){
							//add to map
							newMap[it.alias]=it.state;
						}
					}
					map=newMap;
				}
			}
		}
		
		public static function forvardState(alias:String):int{
			if(!map){
				throw new Error('Ошибка инициализации AliasForward.initMap',OrderState.ERR_APP_INIT);
				return;
			}
			if(!map.hasOwnProperty(alias)) return 0;
			return map[alias];
		}

		public static function gridColumns():ArrayList{
			var result:Array= [];
			var col:GridColumn;
			
			col= new GridColumn('alias'); col.headerText='Алиас'; result.push(col);
			col= new GridColumn('state'); col.headerText='Устанавливать статус'; col.labelFunction=GridUtil.idToLabel; col.itemEditor=new ClassFactory(CBoxGridItemEditor); result.push(col);

			return new ArrayList(result);
		}

        public function AliasForward() {
            super();
        }
    }
}