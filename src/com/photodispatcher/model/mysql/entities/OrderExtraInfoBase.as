/**
 * Generated by Gas3 v2.3.2 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (OrderExtraInfo.as).
 */

package com.photodispatcher.model.mysql.entities {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import org.granite.tide.IPropertyHolder;

    [Bindable]
    public class OrderExtraInfoBase extends AbstractEntity {

        private var _book_type:int;
        private var _calc_type:String;
        private var _corner_type:String;
        private var _cover:String;
        private var _endpaper:String;
        private var _format:String;
        private var _id:String;
        private var _interlayer:String;
        private var _kaptal:String;
        private var _sub_id:String;

        public function set book_type(value:int):void {
            _book_type = value;
        }
        public function get book_type():int {
            return _book_type;
        }

        public function set calc_type(value:String):void {
            _calc_type = value;
        }
        public function get calc_type():String {
            return _calc_type;
        }

        public function set corner_type(value:String):void {
            _corner_type = value;
        }
        public function get corner_type():String {
            return _corner_type;
        }

        public function set cover(value:String):void {
            _cover = value;
        }
        public function get cover():String {
            return _cover;
        }

        public function set endpaper(value:String):void {
            _endpaper = value;
        }
        public function get endpaper():String {
            return _endpaper;
        }

        public function set format(value:String):void {
            _format = value;
        }
        public function get format():String {
            return _format;
        }

        public function set id(value:String):void {
            _id = value;
        }
        public function get id():String {
            return _id;
        }

        public function set interlayer(value:String):void {
            _interlayer = value;
        }
        public function get interlayer():String {
            return _interlayer;
        }

        public function set kaptal(value:String):void {
            _kaptal = value;
        }
        public function get kaptal():String {
            return _kaptal;
        }

        public function set sub_id(value:String):void {
            _sub_id = value;
        }
        public function get sub_id():String {
            return _sub_id;
        }

        public override function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _book_type = input.readObject() as int;
            _calc_type = input.readObject() as String;
            _corner_type = input.readObject() as String;
            _cover = input.readObject() as String;
            _endpaper = input.readObject() as String;
            _format = input.readObject() as String;
            _id = input.readObject() as String;
            _interlayer = input.readObject() as String;
            _kaptal = input.readObject() as String;
            _sub_id = input.readObject() as String;
        }

        public override function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject((_book_type is IPropertyHolder) ? IPropertyHolder(_book_type).object : _book_type);
            output.writeObject((_calc_type is IPropertyHolder) ? IPropertyHolder(_calc_type).object : _calc_type);
            output.writeObject((_corner_type is IPropertyHolder) ? IPropertyHolder(_corner_type).object : _corner_type);
            output.writeObject((_cover is IPropertyHolder) ? IPropertyHolder(_cover).object : _cover);
            output.writeObject((_endpaper is IPropertyHolder) ? IPropertyHolder(_endpaper).object : _endpaper);
            output.writeObject((_format is IPropertyHolder) ? IPropertyHolder(_format).object : _format);
            output.writeObject((_id is IPropertyHolder) ? IPropertyHolder(_id).object : _id);
            output.writeObject((_interlayer is IPropertyHolder) ? IPropertyHolder(_interlayer).object : _interlayer);
            output.writeObject((_kaptal is IPropertyHolder) ? IPropertyHolder(_kaptal).object : _kaptal);
            output.writeObject((_sub_id is IPropertyHolder) ? IPropertyHolder(_sub_id).object : _sub_id);
        }
    }
}