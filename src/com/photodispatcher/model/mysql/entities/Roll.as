/**
 * Generated by Gas3 v2.3.2 (Granite Data Services).
 *
 * NOTE: this file is only generated if it does not exist. You may safely put
 * your custom code here.
 */

package com.photodispatcher.model.mysql.entities {
	import com.photodispatcher.model.mysql.DbLatch;
	import com.photodispatcher.model.mysql.services.RollService;
	
	import flash.events.Event;
	
	import org.granite.tide.Tide;

    [Bindable]
    [RemoteClass(alias="com.photodispatcher.model.mysql.entities.Roll")]
    public class Roll extends RollBase {
		
		private static var _itemsMap:Object;
		
		public static function itemsMap():Object{
			if(_itemsMap) return _itemsMap;
			initItemsMap();
			return _itemsMap;
		}
		
		public static function initItemsMap():DbLatch{
			var svc:RollService=Tide.getInstance().getContext().byType(RollService,true) as RollService;
			var latch:DbLatch= new DbLatch();
			latch.addEventListener(Event.COMPLETE, onLoad);
			latch.addLatch(svc.loadAll());
			latch.start();
			return latch;
		}
		private static function onLoad(event:Event):void{
			var latch:DbLatch= event.target as DbLatch;
			if(latch){
				latch.removeEventListener(Event.COMPLETE,onLoad);
				if(latch.complite){
					var a:Array=latch.lastDataArr;
					if(!a) return;
					_itemsMap=new Object();
					for each(var o:Object in a){
						var s:Roll= o as Roll;
						if(s){
							_itemsMap[s.width.toString()]=s;
						}
					}
				}
			}
		}
		
		public static function getStandartWidth(pix:int):int{
			var map:Object=itemsMap();
			if(!map) return 0;
			var r:Roll;
			var result:Roll;
			for each(r in map){
				if(r.pixels==pix) return r.width;
				if(r.pixels>pix){
					if(!result || result.pixels>r.pixels) result=r;
				}
			}
			return result?result.width:0;
		}

    }
}