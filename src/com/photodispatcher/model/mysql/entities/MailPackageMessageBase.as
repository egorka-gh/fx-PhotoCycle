/**
 * Generated by Gas3 v3.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (MailPackageMessage.as).
 */

package com.photodispatcher.model.mysql.entities {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import org.granite.tide.IPropertyHolder;

    [Bindable]
    public class MailPackageMessageBase extends AbstractEntity {

        public function MailPackageMessageBase() {
            super();
        }

        private var _id:int;
        private var _log_key:String;
        private var _log_user:String;
        private var _message:String;
        private var _source:int;

        public function set id(value:int):void {
            _id = value;
        }
        public function get id():int {
            return _id;
        }

        public function set log_key(value:String):void {
            _log_key = value;
        }
        public function get log_key():String {
            return _log_key;
        }

        public function set log_user(value:String):void {
            _log_user = value;
        }
        public function get log_user():String {
            return _log_user;
        }

        public function set message(value:String):void {
            _message = value;
        }
        public function get message():String {
            return _message;
        }

        public function set source(value:int):void {
            _source = value;
        }
        public function get source():int {
            return _source;
        }

        public override function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _id = input.readObject() as int;
            _log_key = input.readObject() as String;
            _log_user = input.readObject() as String;
            _message = input.readObject() as String;
            _source = input.readObject() as int;
        }

        public override function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject((_id is IPropertyHolder) ? IPropertyHolder(_id).object : _id);
            output.writeObject((_log_key is IPropertyHolder) ? IPropertyHolder(_log_key).object : _log_key);
            output.writeObject((_log_user is IPropertyHolder) ? IPropertyHolder(_log_user).object : _log_user);
            output.writeObject((_message is IPropertyHolder) ? IPropertyHolder(_message).object : _message);
            output.writeObject((_source is IPropertyHolder) ? IPropertyHolder(_source).object : _source);
        }
    }
}