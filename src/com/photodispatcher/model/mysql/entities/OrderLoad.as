/**
 * Generated by Gas3 v3.1.0 (Granite Data Services).
 *
 * NOTE: this file is only generated if it does not exist. You may safely put
 * your custom code here.
 */

package com.photodispatcher.model.mysql.entities {
	import mx.collections.ArrayCollection;
	
	import org.granite.reflect.Field;
	import org.granite.reflect.Type;

    [Bindable]
    [RemoteClass(alias="com.photodispatcher.model.mysql.entities.OrderLoad")]
    public class OrderLoad extends OrderLoadBase {

		public static function toOrder(srcObj:OrderLoad):Order{
			var res:Order=new Order();
			var type:Type=Type.forClass(OrderLoad);
			var props:Array=type.properties;
			if(!props || props.length==0) return res;
			var prop:Field;
			for each(prop in props){
				if(res.hasOwnProperty(prop.name)) res[prop.name]=srcObj[prop.name];
			}
			return res;
		}

		public static function fromOrder(srcObj:Order):OrderLoad{
			var res:OrderLoad=new OrderLoad();
			var type:Type=Type.forClass(OrderLoad);
			var props:Array=type.properties;
			if(!props || props.length==0) return res;
			var prop:Field;
			for each(prop in props){
				if(srcObj.hasOwnProperty(prop.name)) res[prop.name]=srcObj[prop.name];
			}
			return res;
		}

        public function OrderLoad() {
            super();
			state=OrderState.FTP_WAITE;
        }
		
		//remote source fields runtime
		public var src_state:String;
		public var filled:Boolean;
		public var canChangeRemoteState:Boolean;
		
		public function addFile(file:OrderFile):void{
			if(!files) files= new ArrayCollection;
			files.addItem(file);
		}

		override public function set state(value:int):void{
			if(super.state != value) state_name= OrderState.getStateName(value);
			super.state = value;
			state_date= new Date();
		}
		override public function get state():int{
			return super.state;
		}

    }
}