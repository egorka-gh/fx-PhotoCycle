/**
 * Generated by Gas3 v3.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (PrnSubQueue.as).
 */

package com.photodispatcher.model.mysql.entities {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;

    [Bindable]
    public class PrnSubQueueBase extends AbstractEntity {

        public function PrnSubQueueBase() {
            super();
        }

        private var _complited:Date;
        private var _is_active:Boolean;
        private var _lab:int;
        private var _prn_queue:int;
        private var _started:Date;
        private var _sub_queue:int;

        public function set complited(value:Date):void {
            _complited = value;
        }
        public function get complited():Date {
            return _complited;
        }

        public function set is_active(value:Boolean):void {
            _is_active = value;
        }
        public function get is_active():Boolean {
            return _is_active;
        }

        public function set lab(value:int):void {
            _lab = value;
        }
        public function get lab():int {
            return _lab;
        }

        public function set prn_queue(value:int):void {
            _prn_queue = value;
        }
        public function get prn_queue():int {
            return _prn_queue;
        }

        public function set started(value:Date):void {
            _started = value;
        }
        public function get started():Date {
            return _started;
        }

        public function set sub_queue(value:int):void {
            _sub_queue = value;
        }
        public function get sub_queue():int {
            return _sub_queue;
        }

        public override function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _complited = input.readObject() as Date;
            _is_active = input.readObject() as Boolean;
            _lab = input.readObject() as int;
            _prn_queue = input.readObject() as int;
            _started = input.readObject() as Date;
            _sub_queue = input.readObject() as int;
        }

        public override function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject(_complited);
            output.writeObject(_is_active);
            output.writeObject(_lab);
            output.writeObject(_prn_queue);
            output.writeObject(_started);
            output.writeObject(_sub_queue);
        }
    }
}