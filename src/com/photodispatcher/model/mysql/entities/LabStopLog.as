/**
 * Generated by Gas3 v3.1.0 (Granite Data Services).
 *
 * NOTE: this file is only generated if it does not exist. You may safely put
 * your custom code here.
 */

package com.photodispatcher.model.mysql.entities {
	import com.photodispatcher.model.mysql.DbLatch;
	
	import flash.globalization.DateTimeStyle;
	
	import mx.utils.StringUtil;
	
	import spark.formatters.DateTimeFormatter;
	
	[Bindable]
	[RemoteClass(alias="com.photodispatcher.model.mysql.entities.LabStopLog")]
	public class LabStopLog extends LabStopLogBase {
		
		public function LabStopLog() {
			super();
		}
		
		public var labDeviceName:String;
		
		public function get logDate():Date {
			
			return time_updated? time_updated : time_created;
			
		}
		
		public function toString():String {
			
			var fmt:DateTimeFormatter = new DateTimeFormatter(); 
			fmt.dateStyle=fmt.timeStyle=DateTimeStyle.SHORT;
			fmt.setStyle('locale', 'ru_RU');
			
			return StringUtil.substitute("{0} - {1} [{2}, {3}]", fmt.format(this.time_from), this.time_to? fmt.format(this.time_to) : "сейчас", fmt.format(this.logDate), this.lab_stop_type_name);
			
		}
		
		public static function getLast(s1:LabStopLog, s2:LabStopLog):LabStopLog {
			
			if(s1 == null){
				return s2;
			}
			
			if(s2 == null){
				return s1;
			}
			
			if(s1.time_to == null && s2.time_to){
				return s1;
			}
			
			if(s1.time_to && s2.time_to == null){
				return s2;
			}
			
			if((s1.time_to == null && s2.time_to == null) || (s1.time_to.time == s2.time_to.time)){
				
				if(s1.logDate.time == s2.logDate.time){
					
					if(s1.id > s2.id){
						return s1;
					} else {
						return s2;
					}
					
				} else if(s1.logDate.time > s2.logDate.time){
					return s1;
				} else {
					return s2;
				}
				
			} else if(s1.time_to.time > s2.time_to.time){
				return s1;
			} else {
				return s2;
			}
			
		}
		
		
	}
}