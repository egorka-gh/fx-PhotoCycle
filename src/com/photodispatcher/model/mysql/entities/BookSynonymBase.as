/**
 * Generated by Gas3 v3.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (BookSynonym.as).
 */

package com.photodispatcher.model.mysql.entities {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import mx.collections.ListCollectionView;

    [Bindable]
    public class BookSynonymBase extends AbstractEntity {

        public function BookSynonymBase() {
            super();
        }

        private var _book_type:int;
        private var _book_type_name:String;
        private var _compo_type:int;
        private var _compo_type_name:String;
        private var _compos:ListCollectionView;
        private var _glueCommands:ListCollectionView;
        private var _has_backprint:Boolean;
        private var _id:int;
        private var _is_allow:Boolean;
        private var _is_horizontal:Boolean;
        private var _order_program:int;
        private var _order_program_name:String;
        private var _src_type:int;
        private var _src_type_name:String;
        private var _synonym:String;
        private var _synonym_type:int;
        private var _synonym_type_name:String;
        private var _templates:ListCollectionView;

        public function set book_type(value:int):void {
            _book_type = value;
        }
        public function get book_type():int {
            return _book_type;
        }

        public function set book_type_name(value:String):void {
            _book_type_name = value;
        }
        public function get book_type_name():String {
            return _book_type_name;
        }

        public function set compo_type(value:int):void {
            _compo_type = value;
        }
        public function get compo_type():int {
            return _compo_type;
        }

        public function set compo_type_name(value:String):void {
            _compo_type_name = value;
        }
        public function get compo_type_name():String {
            return _compo_type_name;
        }

        public function set compos(value:ListCollectionView):void {
            _compos = value;
        }
        public function get compos():ListCollectionView {
            return _compos;
        }

        public function set glueCommands(value:ListCollectionView):void {
            _glueCommands = value;
        }
        public function get glueCommands():ListCollectionView {
            return _glueCommands;
        }

        public function set has_backprint(value:Boolean):void {
            _has_backprint = value;
        }
        public function get has_backprint():Boolean {
            return _has_backprint;
        }

        public function set id(value:int):void {
            _id = value;
        }
        public function get id():int {
            return _id;
        }

        public function set is_allow(value:Boolean):void {
            _is_allow = value;
        }
        public function get is_allow():Boolean {
            return _is_allow;
        }

        public function set is_horizontal(value:Boolean):void {
            _is_horizontal = value;
        }
        public function get is_horizontal():Boolean {
            return _is_horizontal;
        }

        public function set order_program(value:int):void {
            _order_program = value;
        }
        public function get order_program():int {
            return _order_program;
        }

        public function set order_program_name(value:String):void {
            _order_program_name = value;
        }
        public function get order_program_name():String {
            return _order_program_name;
        }

        public function set src_type(value:int):void {
            _src_type = value;
        }
        public function get src_type():int {
            return _src_type;
        }

        public function set src_type_name(value:String):void {
            _src_type_name = value;
        }
        public function get src_type_name():String {
            return _src_type_name;
        }

        public function set synonym(value:String):void {
            _synonym = value;
        }
        public function get synonym():String {
            return _synonym;
        }

        public function set synonym_type(value:int):void {
            _synonym_type = value;
        }
        public function get synonym_type():int {
            return _synonym_type;
        }

        public function set synonym_type_name(value:String):void {
            _synonym_type_name = value;
        }
        public function get synonym_type_name():String {
            return _synonym_type_name;
        }

        public function set templates(value:ListCollectionView):void {
            _templates = value;
        }
        public function get templates():ListCollectionView {
            return _templates;
        }

        public override function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _book_type = input.readObject() as int;
            _book_type_name = input.readObject() as String;
            _compo_type = input.readObject() as int;
            _compo_type_name = input.readObject() as String;
            _compos = input.readObject() as ListCollectionView;
            _glueCommands = input.readObject() as ListCollectionView;
            _has_backprint = input.readObject() as Boolean;
            _id = input.readObject() as int;
            _is_allow = input.readObject() as Boolean;
            _is_horizontal = input.readObject() as Boolean;
            _order_program = input.readObject() as int;
            _order_program_name = input.readObject() as String;
            _src_type = input.readObject() as int;
            _src_type_name = input.readObject() as String;
            _synonym = input.readObject() as String;
            _synonym_type = input.readObject() as int;
            _synonym_type_name = input.readObject() as String;
            _templates = input.readObject() as ListCollectionView;
        }

        public override function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject(_book_type);
            output.writeObject(_book_type_name);
            output.writeObject(_compo_type);
            output.writeObject(_compo_type_name);
            output.writeObject(_compos);
            output.writeObject(_glueCommands);
            output.writeObject(_has_backprint);
            output.writeObject(_id);
            output.writeObject(_is_allow);
            output.writeObject(_is_horizontal);
            output.writeObject(_order_program);
            output.writeObject(_order_program_name);
            output.writeObject(_src_type);
            output.writeObject(_src_type_name);
            output.writeObject(_synonym);
            output.writeObject(_synonym_type);
            output.writeObject(_synonym_type_name);
            output.writeObject(_templates);
        }
    }
}