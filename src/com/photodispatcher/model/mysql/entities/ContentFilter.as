/**
 * Generated by Gas3 v2.3.2 (Granite Data Services).
 *
 * NOTE: this file is only generated if it does not exist. You may safely put
 * your custom code here.
 */

package com.photodispatcher.model.mysql.entities {
	import mx.collections.ArrayList;
	
	import spark.components.gridClasses.GridColumn;

    [Bindable]
    [RemoteClass(alias="com.photodispatcher.model.mysql.entities.ContentFilter")]
    public class ContentFilter extends ContentFilterBase {
	
		public static function gridColumns():ArrayList{
			var result:ArrayList= new ArrayList();
			var col:GridColumn;
			col= new GridColumn('id'); col.headerText='ID'; col.visible=false; result.addItem(col);
			col= new GridColumn('name'); col.headerText='Наименование'; result.addItem(col);
			return result;
		}

		private static var _filters:Array;
		public static function get filters():Array{
			//if(!_filters) initFilters();
			return [];
		}
		
		private static function initFilters():void{
			/*
			var d:ContentFilterDAO= new ContentFilterDAO();
			var arr:Array=d.findAllArray(true);
			if(!arr) return;
			var f:ContentFilter;
			for each (f in arr){
				if(!f.loadAliases()) return;
			}
			_filters=arr;
			*/
		}

		public function loadAliases():Boolean{
			return true;
			/*
			if (!is_alias_filter) return true;
			var d:ContentFilterAliasDAO= new ContentFilterAliasDAO();
			var arr:Array=d.findByFilter(id);
			var a:ContentFilterAlias;
			if(arr){
				aliases=[];
				for each(a in arr) aliases.push(a.alias);
				return true;
			}
			return false;
			*/
		}
		
		public function allowAlias(alias:int):Boolean{
			return true;
			/*
			if(!is_alias_filter) return true;
			if(!aliases) return true; // not init??
			return aliases.indexOf(alias)!=-1;
			*/
		}
		
		public function allowPrintGroup(pg:com.photodispatcher.model.mysql.entities.PrintGroup):Boolean{
			/*
			if(!pg) return false;
			if(pg.book_type==0 && !is_photo_allow) return false;
			if(pg.bookTemplate && !allowAlias(pg.bookTemplate.book)) return false;
			*/
			return true; 
		}

    }

}