/**
 * Generated by Gas3 v3.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (PrnQueue.as).
 */

package com.photodispatcher.model.mysql.entities {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import mx.collections.ListCollectionView;

    [Bindable]
    public class PrnQueueBase extends AbstractEntity {

        public function PrnQueueBase() {
            super();
        }

        private var _complited:Date;
        private var _created:Date;
        private var _has_sub:Boolean;
        private var _id:int;
        private var _is_active:Boolean;
        private var _is_reprint:Boolean;
        private var _lab:int;
        private var _lab_name:String;
        private var _lab_type:int;
        private var _lab_type_name:String;
        private var _label:String;
        private var _pg_date:Date;
        private var _printGroups:ListCollectionView;
        private var _priority:int;
        private var _started:Date;
        private var _strategy:int;
        private var _strategy_type:int;
        private var _strategy_type_name:String;
        private var _sub_queue:int;

        public function set complited(value:Date):void {
            _complited = value;
        }
        public function get complited():Date {
            return _complited;
        }

        public function set created(value:Date):void {
            _created = value;
        }
        public function get created():Date {
            return _created;
        }

        public function set has_sub(value:Boolean):void {
            _has_sub = value;
        }
        public function get has_sub():Boolean {
            return _has_sub;
        }

        public function set id(value:int):void {
            _id = value;
        }
        public function get id():int {
            return _id;
        }

        public function set is_active(value:Boolean):void {
            _is_active = value;
        }
        public function get is_active():Boolean {
            return _is_active;
        }

        public function set is_reprint(value:Boolean):void {
            _is_reprint = value;
        }
        public function get is_reprint():Boolean {
            return _is_reprint;
        }

        public function set lab(value:int):void {
            _lab = value;
        }
        public function get lab():int {
            return _lab;
        }

        public function set lab_name(value:String):void {
            _lab_name = value;
        }
        public function get lab_name():String {
            return _lab_name;
        }

        public function set lab_type(value:int):void {
            _lab_type = value;
        }
        public function get lab_type():int {
            return _lab_type;
        }

        public function set lab_type_name(value:String):void {
            _lab_type_name = value;
        }
        public function get lab_type_name():String {
            return _lab_type_name;
        }

        public function set label(value:String):void {
            _label = value;
        }
        public function get label():String {
            return _label;
        }

        public function set pg_date(value:Date):void {
            _pg_date = value;
        }
        public function get pg_date():Date {
            return _pg_date;
        }

        public function set printGroups(value:ListCollectionView):void {
            _printGroups = value;
        }
        public function get printGroups():ListCollectionView {
            return _printGroups;
        }

        public function set priority(value:int):void {
            _priority = value;
        }
        public function get priority():int {
            return _priority;
        }

        public function set started(value:Date):void {
            _started = value;
        }
        public function get started():Date {
            return _started;
        }

        public function set strategy(value:int):void {
            _strategy = value;
        }
        public function get strategy():int {
            return _strategy;
        }

        public function set strategy_type(value:int):void {
            _strategy_type = value;
        }
        public function get strategy_type():int {
            return _strategy_type;
        }

        public function set strategy_type_name(value:String):void {
            _strategy_type_name = value;
        }
        public function get strategy_type_name():String {
            return _strategy_type_name;
        }

        public function set sub_queue(value:int):void {
            _sub_queue = value;
        }
        public function get sub_queue():int {
            return _sub_queue;
        }

        public override function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _complited = input.readObject() as Date;
            _created = input.readObject() as Date;
            _has_sub = input.readObject() as Boolean;
            _id = input.readObject() as int;
            _is_active = input.readObject() as Boolean;
            _is_reprint = input.readObject() as Boolean;
            _lab = input.readObject() as int;
            _lab_name = input.readObject() as String;
            _lab_type = input.readObject() as int;
            _lab_type_name = input.readObject() as String;
            _label = input.readObject() as String;
            _pg_date = input.readObject() as Date;
            _printGroups = input.readObject() as ListCollectionView;
            _priority = input.readObject() as int;
            _started = input.readObject() as Date;
            _strategy = input.readObject() as int;
            _strategy_type = input.readObject() as int;
            _strategy_type_name = input.readObject() as String;
            _sub_queue = input.readObject() as int;
        }

        public override function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject(_complited);
            output.writeObject(_created);
            output.writeObject(_has_sub);
            output.writeObject(_id);
            output.writeObject(_is_active);
            output.writeObject(_is_reprint);
            output.writeObject(_lab);
            output.writeObject(_lab_name);
            output.writeObject(_lab_type);
            output.writeObject(_lab_type_name);
            output.writeObject(_label);
            output.writeObject(_pg_date);
            output.writeObject(_printGroups);
            output.writeObject(_priority);
            output.writeObject(_started);
            output.writeObject(_strategy);
            output.writeObject(_strategy_type);
            output.writeObject(_strategy_type_name);
            output.writeObject(_sub_queue);
        }
    }
}