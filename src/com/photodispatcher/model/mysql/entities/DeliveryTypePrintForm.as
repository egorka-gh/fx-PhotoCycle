/**
 * Generated by Gas3 v3.1.0 (Granite Data Services).
 *
 * NOTE: this file is only generated if it does not exist. You may safely put
 * your custom code here.
 */

package com.photodispatcher.model.mysql.entities {
	import com.photodispatcher.model.mysql.DbLatch;
	import com.photodispatcher.model.mysql.services.XReportService;
	
	import flash.events.Event;
	
	import mx.collections.ArrayCollection;
	
	import org.granite.tide.Tide;

    [Bindable]
    [RemoteClass(alias="com.photodispatcher.model.mysql.entities.DeliveryTypePrintForm")]
    public class DeliveryTypePrintForm extends DeliveryTypePrintFormBase {

		private static var formsMap:Object;
		
		public static function initFormsMap():DbLatch{
			var service:XReportService=Tide.getInstance().getContext().byType(XReportService,true) as XReportService;
			var latch:DbLatch= new DbLatch();
			latch.addEventListener(Event.COMPLETE, onLoad);
			latch.addLatch(service.getPrintForms());
			latch.start();
			return latch;
		}
		private static function onLoad(event:Event):void{
			var latch:DbLatch= event.target as DbLatch;
			if(latch){
				latch.removeEventListener(Event.COMPLETE,onLoad);
				if(latch.complite){
					var a:Array=latch.lastDataArr;
					if(!a) return;
					var newMap:Object=new Object();
					var items:Array;
					var it:DeliveryTypePrintForm;
					for each(it in a){
						if(it){
							//add to synonym map
							items=newMap[it.delivery_type] as Array;
							if(!items){
								items=[];
								newMap[it.delivery_type]=items;
							}
							items.push(it);
						}
					}
					formsMap=newMap;
				}
			}
		}

		public static function getForms(delivery_type:int):ArrayCollection{
			var result:Array;
			if(!formsMap){
				throw new Error('Ошибка инициализации DeliveryTypePrintForm.initFormsMap',OrderState.ERR_APP_INIT);
				return;
			}
			//add default 
			var items:Array=formsMap[0] as Array;
			if(items){
				result=items;
			}else{
				result=[];
			}
			
			//add by delivery
			if(delivery_type!=0){
				items=formsMap[delivery_type] as Array;
				if(items) result=result.concat(items);
			}

			return new ArrayCollection(result);
		}

        public function DeliveryTypePrintForm() {
            super();
        }
    }
}