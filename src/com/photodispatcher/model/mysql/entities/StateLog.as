/**
 * Generated by Gas3 v2.3.2 (Granite Data Services).
 *
 * NOTE: this file is only generated if it does not exist. You may safely put
 * your custom code here.
 */

package com.photodispatcher.model.mysql.entities {
	import com.photodispatcher.model.mysql.DbLatch;
	import com.photodispatcher.model.mysql.services.OrderStateService;
	
	import flash.globalization.DateTimeStyle;
	
	import mx.collections.ArrayList;
	
	import org.granite.tide.Tide;
	
	import spark.components.gridClasses.GridColumn;
	import spark.formatters.DateTimeFormatter;

    [Bindable]
    [RemoteClass(alias="com.photodispatcher.model.mysql.entities.StateLog")]
    public class StateLog extends StateLogBase {
		
		public static function gridColumns(includeOrderId:Boolean=false):ArrayList{
			var result:Array= [];
			var col:GridColumn;
			
			if(includeOrderId){
				col= new GridColumn('order_id'); col.headerText='ID Заказа'; col.width=85; result.push(col);
				col= new GridColumn('pg_id'); col.headerText='ID Группы'; col.width=85; result.push(col);
			}else{
				col= new GridColumn('pg_id'); col.headerText='ID'; col.width=85; result.push(col);
			}
			var fmt:DateTimeFormatter=new DateTimeFormatter(); fmt.dateStyle=fmt.timeStyle=DateTimeStyle.SHORT; 
			col= new GridColumn('state_date'); col.headerText='Дата'; col.formatter=fmt;  col.width=110; result.push(col);
			col= new GridColumn('state_name'); col.headerText='Статус'; col.width=100; result.push(col); 
			col= new GridColumn('comment'); col.headerText='Комментарий'; result.push(col); 
			return new ArrayList(result);
		}

		public static function gridColumnsLoader():ArrayList{
			var result:Array= [];
			var col:GridColumn;
			
			var fmt:DateTimeFormatter=new DateTimeFormatter(); fmt.dateStyle=fmt.timeStyle=DateTimeStyle.SHORT; 
			col= new GridColumn('state_date'); col.headerText='Дата'; col.formatter=fmt;  col.width=110; result.push(col);
			col= new GridColumn('state_name'); col.headerText='Статус'; col.width=100; result.push(col); 
			col= new GridColumn('comment'); col.headerText='Комментарий'; result.push(col); 
			return new ArrayList(result);
		}

		public static function logByPGroup(state:int, pgId:String, comment:String):void{
			var svc:OrderStateService=Tide.getInstance().getContext().byType(OrderStateService,true) as OrderStateService;
			if(!svc) return;
			var latch:DbLatch= new DbLatch(true);
			latch.addLatch(svc.logStateByPGroup(pgId, state, comment));
			latch.start();
		}

		public static function log(state:int, orderId:String, subId:String='', comment:String=''):void{
			var svc:OrderStateService=Tide.getInstance().getContext().byType(OrderStateService,true) as OrderStateService;
			if(!svc) return;
			var sl:StateLog= new StateLog();
			sl.order_id=orderId;
			sl.sub_id=subId;
			sl.comment=comment.substr(0,250);
			sl.state=state;
			sl.state_date= new Date();
			var latch:DbLatch= new DbLatch(true);
			latch.addLatch(svc.logState(sl));
			latch.start();
		}
    }
}