/**
 * Generated by Gas3 v3.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (ContentFilterAlias.as).
 */

package com.photodispatcher.model.mysql.entities {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import org.granite.tide.IPropertyHolder;

    [Bindable]
    public class ContentFilterAliasBase extends AbstractEntity {

        public function ContentFilterAliasBase() {
            super();
        }

        private var _alias:int;
        private var _alias_name:String;
        private var _allow:Boolean;
        private var _filter:int;

        public function set alias(value:int):void {
            _alias = value;
        }
        public function get alias():int {
            return _alias;
        }

        public function set alias_name(value:String):void {
            _alias_name = value;
        }
        public function get alias_name():String {
            return _alias_name;
        }

        public function set allow(value:Boolean):void {
            _allow = value;
        }
        public function get allow():Boolean {
            return _allow;
        }

        public function set filter(value:int):void {
            _filter = value;
        }
        public function get filter():int {
            return _filter;
        }

        public override function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _alias = input.readObject() as int;
            _alias_name = input.readObject() as String;
            _allow = input.readObject() as Boolean;
            _filter = input.readObject() as int;
        }

        public override function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject((_alias is IPropertyHolder) ? IPropertyHolder(_alias).object : _alias);
            output.writeObject((_alias_name is IPropertyHolder) ? IPropertyHolder(_alias_name).object : _alias_name);
            output.writeObject((_allow is IPropertyHolder) ? IPropertyHolder(_allow).object : _allow);
            output.writeObject((_filter is IPropertyHolder) ? IPropertyHolder(_filter).object : _filter);
        }
    }
}