<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 keyUp="group1_keyUpHandler(event)">

	<fx:Metadata>
		[Event(name="close", type="flash.events.Event")]
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			import com.photodispatcher.context.Context;
			import com.photodispatcher.factory.PrintGroupBuilder;
			import com.photodispatcher.model.BookPgTemplate;
			import com.photodispatcher.model.BookSynonym;
			import com.photodispatcher.model.Order;
			import com.photodispatcher.model.PrintGroup;
			import com.photodispatcher.model.PrintGroupFile;
			import com.photodispatcher.model.Source;
			import com.photodispatcher.model.TechLog;
			import com.photodispatcher.model.TechPoint;
			import com.photodispatcher.model.dao.BookSynonymDAO;
			import com.photodispatcher.model.dao.TechLogDAO;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			
			import spark.events.IndexChangeEvent;
			
			public var techPoint:TechPoint;

			private var rootDir:File;
			private var order:Order;
			private var bookSheets:Array;
			[Bindable]
			private var sheetsAC:ArrayCollection;
			private var prepared:Boolean;
			
			public function prepare(order:Order):Boolean{
				if(this.order==order) return Boolean(this.order); 
				//TODO reset
				rootDir=null;
				bookSheets=null;
				sheetsAC=null;
				prepared=false
				
				if(!order) return false;
				if(!order.printGroups || order.printGroups.length==0) return false;
				var src:Source=Context.getSource(order.source);
				if(!src) return false;
				//check
				if(!Context.getAttribute('workFolder')){
					Alert.show('Не задана рабочая папка');
					return false;
				}
				//check order folder
				var pg:PrintGroup=order.printGroups[0] as PrintGroup;
				if(!pg) return false;
					
				var fName:String=src.getWrkFolder()+File.separator+order.ftp_folder+File.separator+pg.path;
				var fl:File=new File(fName);
				if(!fl.exists || !fl.isDirectory){
					Alert.show('Папка заказа не найдена');
					return false;
				}
				rootDir=fl;
				var a:Array=rootDir.getDirectoryListing();
				var fNames:Array=[];
				for each(fl in a){
					if(!fl.isDirectory) fNames.push(fl.name);
				}
				
				var builder:PrintGroupBuilder= new PrintGroupBuilder();
				var map:Dictionary = new Dictionary();
				map[pg.path]=fNames;
				try{
					a=builder.build(src,map,'',true);
				}catch(error:Error){}
				
				if(!a || a.length==0){
					Alert.show('Ошибка шаблона книи (build)');
					return false;
				}
				var cover:PrintGroup;
				var block:PrintGroup;
				for each(pg in a){
					if(pg.book_part==BookSynonym.BOOK_PART_COVER || pg.book_part==BookSynonym.BOOK_PART_INSERT) cover=pg;
					if(pg.book_part==BookSynonym.BOOK_PART_BLOCK) block=pg;
				}
				if(!block){
					Alert.show('Ошибка шаблона книи');
					return false;
				}

				var doublePage:Boolean=(block.is_pdf && !block.bookTemplate.is_sheet_ready);
				//prevent empty pages
				block.is_duplex=false;
				var item:BookPreviewSheet;
				var blockPages:Array=block.bookFiles;
				var coverPages:Array;
				var i:int;
				if (cover){
					coverPages=cover.bookFiles;
				}
				//fill sheets
				bookSheets=[];
				for (i=0; i < block.book_num; i++){
					a=[];
					//cover
					item= new BookPreviewSheet();
					item.sheet=0;
					if(!coverPages){
						item.isEmptyCover=true;
					}else{
						item.leftPage=(coverPages[i] as PrintGroupFile).file_name;
						item.isCustomLeft=(coverPages[i] as PrintGroupFile).isCustom;
					}
					a.push(item);
					//block
					for (var j:int = 0; j < block.sheet_num; j++){
						item= new BookPreviewSheet();
						item.doublePage=doublePage;
						item.sheet=j+1;
						if(doublePage){
							item.leftPage=(blockPages[i*block.sheet_num*2+j*2] as PrintGroupFile).file_name;
							item.isCustomLeft=(blockPages[i*block.sheet_num*2+j*2] as PrintGroupFile).isCustom;
							item.rightPage=(blockPages[i*block.sheet_num*2+1+j*2] as PrintGroupFile).file_name;
							item.isCustomRight=(blockPages[i*block.sheet_num*2+1+j*2] as PrintGroupFile).isCustom;
						}else{
							item.leftPage=(blockPages[i*block.sheet_num+j] as PrintGroupFile).file_name;
							item.isCustomLeft=(blockPages[i*block.sheet_num+j] as PrintGroupFile).isCustom;
						}
						a.push(item);
					}
					bookSheets.push(a);
				}
				prepared=true;
				this.order=order;
				return true;
			}

			private var currBook:int;
			
			public function showBook(book:int):void{
				sheetsAC=null;
				currentSheet=null;
				currBook=0;
				if(lstSheets) lstSheets.selectedIndex=-1;
				if(book<=0 || book>bookSheets.length){
					return;
				}
				currBook=book;
				sheetsAC=new ArrayCollection(bookSheets[book-1]);
				if(sheetsAC.length>0) currentSheet=sheetsAC.getItemAt(0) as BookPreviewSheet;
			}
			
			private var _currentSheet:BookPreviewSheet;
			[Bindable]
			public function get currentSheet():BookPreviewSheet{
				return _currentSheet;
			}
			public function set currentSheet(value:BookPreviewSheet):void{
				_currentSheet = value;
				if(!_currentSheet || _currentSheet.isEmptyCover){
					leftFile=null;
					rightFile=null;
					currentState='empty';
					return;
				}
				if(_currentSheet.doublePage){
					leftFile=rootDir.nativePath+File.separator+_currentSheet.leftPage;
					rightFile=rootDir.nativePath+File.separator+_currentSheet.rightPage;
					currentState='dual';
				}else{
					leftFile=rootDir.nativePath+File.separator+_currentSheet.leftPage;
					rightFile=null;
					currentState='simple';
				}
				if(_currentSheet && currBook){
					_currentSheet.check=true;
					var tl:TechLog= new TechLog();
					tl.log_date=new Date();
					tl.setSheet(currBook,_currentSheet.sheet);
					if(_currentSheet.sheet==0){
						tl.print_group=order.id+'_1';
					}else{
						tl.print_group=order.id+'_2';
					}
					tl.src_id= techPoint.id;
					var dao:TechLogDAO=new TechLogDAO();
					dao.addLog(tl);
				}
			}
			[Bindable]
			private var leftFile:String;
			[Bindable]
			private var rightFile:String;

			
			protected function btClose_clickHandler(event:MouseEvent):void{
				dispatchEvent( new Event(Event.CLOSE));			
			}
			
			protected function group1_keyUpHandler(event:KeyboardEvent):void{
				if(event.charCode==32){
					if(lstSheets && sheetsAC){
						event.preventDefault(); 
						if(lstSheets.selectedIndex<sheetsAC.length-1) lstSheets.selectedIndex=lstSheets.selectedIndex+1;
						lstSheets_changeHandler(null);
					}
				}else if(event.charCode==27){
					event.preventDefault(); 
					btClose_clickHandler(null);
				}
			}
			
			protected function lstSheets_changeHandler(event:IndexChangeEvent):void{
				currentSheet=lstSheets.selectedItem as BookPreviewSheet;
			}
			
		]]>
	</fx:Script>

	<s:states>
		<s:State name="empty"/>
		<s:State name="simple"/>
		<s:State name="dual"/>
	</s:states>
	
	<s:VGroup gap="5" width="100%" height="100%">
		<s:HGroup gap="10" width="100%" verticalAlign="bottom">
			<s:List id="lstSheets" dataProvider="{sheetsAC}" selectedItem="{currentSheet}"
					itemRenderer="com.photodispatcher.view.itemRenderer.BookSheetCheckRenderer"
					change="lstSheets_changeHandler(event)"
					width="100%">
				<s:layout>
					<s:HorizontalLayout gap="0"/>
				</s:layout>
			</s:List>
			<s:Button id="btClose" label="Закрыть" click="btClose_clickHandler(event)"/>
		</s:HGroup>
		<s:HGroup gap="0" width="100%" height="100%">
			<s:Rect width="100%" height="100%" includeIn="empty">
				<s:fill>
					<s:SolidColor color="#eeeeee"/>
				</s:fill>
			</s:Rect>
			<s:Image id="imgLeft" width="100%" height="100%" scaleMode="letterbox" smooth="true" smoothingQuality="high"
					 backgroundColor="{currentSheet.isCustomLeft?0xffcc66:0xccccee}" backgroundAlpha="0.5"
					 source="{leftFile}"
					 horizontalAlign="center" horizontalAlign.dual="right"/>
			<s:Image id="imgRihgt" width="100%" height="100%" scaleMode="letterbox" smooth="true" smoothingQuality="high"
					 backgroundColor="{currentSheet.isCustomRight?0xffcc66:0xccccee}" backgroundAlpha="0.5" 
					 source="{rightFile}"
					 horizontalAlign="left" includeIn="dual" />
		</s:HGroup>
	</s:VGroup>
</s:Group>
