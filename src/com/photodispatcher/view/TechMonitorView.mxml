<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx">
	
	<fx:Script>
		<![CDATA[
			import com.photodispatcher.context.Context;
			import com.photodispatcher.event.BarCodeEvent;
			import com.photodispatcher.model.TechLog;
			import com.photodispatcher.model.dao.PrintGroupDAO;
			import com.photodispatcher.model.dao.TechLogDAO;
			import com.photodispatcher.service.barcode.BarcodeReaderCom;
			
			import spark.utils.TextFlowUtil;
		
			public var techPoint:int;
			private var _barcodeReader:BarcodeReaderCom;
			public function get barcodeReader():BarcodeReaderCom{
				return _barcodeReader;
			}
			public function set barcodeReader(value:BarcodeReaderCom):void{
				if(_barcodeReader) _barcodeReader.removeEventListener(BarCodeEvent.BARCODE_READED,onBarCode);
				_barcodeReader = value;
				if(_barcodeReader) _barcodeReader.addEventListener(BarCodeEvent.BARCODE_READED,onBarCode);
			}

			private var logText:String = '';
			private var curPG:String;
			private var curBookNum:int;
			private var curPageNum:int;
			private var curBookTot:int;
			private var curPageTot:int;
			private var wrongOrder:Boolean;
			private var wrongStart:Boolean;
			private var wrongEnd:Boolean;

			[Bindable]
			private var barText:String='';

			private function onBarCode(event:BarCodeEvent):void{
				var barcode:String=event.barcode;
				//parce barcode
				var pgId:String;
				barText+=barcode+'\n';
				if(barcode.length>10) pgId=barcode.substr(10);
				if(!pgId){
					//TODO rise err
					logToScreen('---------- Не верный штрих код: '+barcode+' ----------',true);
					return;
				}
				var bookNum:int=int(barcode.substr(0,3));
				var pageNum:int=int(barcode.substr(6,2));
				//log to data base
				var tl:TechLog= new TechLog();
				tl.book_num=bookNum;
				tl.log_date=new Date();
				tl.page_num=pageNum;
				tl.print_group=pgId;
				tl.src_id= techPoint;
				var dao:TechLogDAO= new TechLogDAO();
				dao.addLog(tl);
				if(curPG && curPG==pgId){
					if(!wrongOrder){
						//calc currents
						if(curPageNum==curPageTot){
							curPageNum=1;
							curBookNum++;
						}else{
							curPageNum++;
						}
						//check sequense
						if(curBookNum!=bookNum || curPageNum!=pageNum){
							wrongOrder=true;
							//show
							logToScreen('Заказ: '+curPG+'. Не верная последовательность',true);
						}
					}
				}else{
					//check end
					var writePg:String;
					if(curPG){
						writePg=curPG;
						wrongEnd= curBookNum!=curBookTot || curPageNum!=curPageTot;
						//show
						if(wrongEnd){
							if(!wrongOrder) logToScreen('Заказ: '+curPG+'. Не верное завершение последовательности',true);
						}else{
							if(!wrongOrder && !wrongStart) logToScreen('Заказ: '+curPG+' - Ok');
						}
					}
					//start new
					barText=barcode+'\n';
					wrongEnd=false;
					wrongStart=false;
					wrongOrder=false;
					curPG=pgId;
					curBookNum=1;
					curPageNum=1;
					curBookTot=int(barcode.substr(3,3));
					curPageTot=int(barcode.substr(8,2));
					//check start
					wrongStart=curBookNum!=bookNum || curPageNum!=pageNum;
					if(wrongStart){
						curBookNum=bookNum;
						curPageNum=pageNum;
						// show
						logToScreen('Заказ: '+curPG+'. Не верный старт последовательности',true);
					}
					if(writePg) flushPg(writePg);
				}
			}

			private function logToScreen(msg:String, isError:Boolean=false):void{
				var color:String=isError?"'#990000'":"'#006600'";
				var bold:String=isError?"fontWeight='bold'":'';
				logText += "<span color="+color+" "+bold+">" + msg + ":</span>  <br />";
				try{
					logTextArea.textFlow=TextFlowUtil.importFromString(logText);
				}catch(error:Error){
					trace('TextFlow err, txt: '+logText);
					trace(error.message);
				}
				logTextArea.scroller.verticalScrollBar.value = logTextArea.scroller.verticalScrollBar.maximum;
			}

			private function flushPg(pgId:String):void{
				if(!pgId) return;
				//TODO check/update print group state
				var dao:PrintGroupDAO= new PrintGroupDAO();
				dao.setStateByTech(pgId);
			}
			
			public function start():void{
				cleanLog();
				barText='';
				techPoint=int(Context.getAttribute("techPoint"));
				if(!techPoint){
					//TODO rise err or log in screen
					logToScreen('---------- Не задана технологическая точка ----------',true);
				}
				curPG='';
				curBookNum=0;
				curPageNum=0;
				curBookTot=0;
				curPageTot=0;
				wrongEnd=false;
				wrongStart=false;
				wrongOrder=false;
			}

			public function stop():void{
				cleanLog();
			}
			
			private function cleanLog():void{
				logText='';
				logTextArea.text='';
			}
		]]>
	</fx:Script>
	<s:VGroup gap="5" width="100%" height="100%" horizontalAlign="right" 
			  paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5">
		<s:HGroup gap="5" width="100%" height="100%">
			<s:TextArea id="logTextArea" width="100%" height="100%" editable="false"/>
			<s:TextArea id="barTextArea" text="{barText}" fontSize="10" width="150" height="100%" editable="false"/>
		</s:HGroup>
		<s:Button label="Очистить" click="{cleanLog()}"/>
	</s:VGroup>
	
</s:Group>
