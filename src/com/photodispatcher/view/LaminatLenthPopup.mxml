<?xml version="1.0" encoding="utf-8"?>
<s:SkinnablePopUpContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						   xmlns:s="library://ns.adobe.com/flex/spark" 
						   xmlns:mx="library://ns.adobe.com/flex/mx"
						   xmlns:view="com.photodispatcher.view.*"
						   xmlns:mdcomp="spark.material.components.*"
						   xmlns:mdskins="spark.material.skins.*"
						   minWidth="100" minHeight="50"
						   >

	<fx:Script>
		<![CDATA[
			import com.photodispatcher.context.Context;
			
			import mx.core.FlexGlobals;
			import mx.managers.PopUpManager;

			[Bindable]
			protected var lLength:Number;
			[Bindable]
			protected var lThickness:Number;
			[Bindable]
			protected var lInnerRadius:Number;
			[Bindable]
			protected var lDiffRadius:Number;
			
			public function show():void{
				lLength = Context.getAttribute("laminateRollLen");
				if(!lLength) lLength=0;
				lThickness = Context.getAttribute("laminateThickness");
				if(!lThickness) lThickness=0;
				lInnerRadius = Context.getAttribute("laminateInnerD");
				if(!lInnerRadius) lInnerRadius=0;
				lDiffRadius=0;
				calcFromLen();

				this.open((FlexGlobals.topLevelApplication as DisplayObjectContainer),true);
				//this.height=FlexGlobals.topLevelApplication.height-200;
				PopUpManager.centerPopUp(this);
			}
			
			public function calcFromLen():void{
				lDiffRadius = Math.round(Math.sqrt((lLength*lThickness)/Math.PI + lInnerRadius*lInnerRadius) - lInnerRadius);
			}

			public function calcFromRadius():void{
				lLength = Math.round(Math.PI*( Math.pow(lInnerRadius+lDiffRadius, 2)-Math.pow(lInnerRadius, 2))/lThickness)
			}

			protected function button1_clickHandler(event:MouseEvent):void{
				Context.setAttribute("statLaminatLen", lLength);
				close(true);
			}
			
		]]>
	</fx:Script>
	
	<s:Rect  radiusX="6" radiusY="6" top="0" left="0" right="0" bottom="0">
		<s:fill>
			<s:SolidColor color="#cccccc"/>
		</s:fill>
		<s:stroke>
			<s:SolidColorStroke color="0" weight="1"/>
		</s:stroke>
	</s:Rect>
	
	<s:VGroup left="20" right="20" top="20" bottom="20" gap="10">
		
		<s:HGroup gap="0" width="100%" verticalAlign="baseline">
			<s:Label text="Длина рулона(м):" fontFamily="RobotoLight" fontSize="20"/>
			<s:Spacer width="100%"/>
			<s:NumericStepper minimum="0" maximum="100000" snapInterval="1" stepSize="50" value="@{lLength}"
							  change="{calcFromLen()}"
							  fontSize="16"/>
		</s:HGroup>

		<s:HGroup width="100%" gap="0" verticalAlign="baseline" >
			<s:Label text="Толщина рулона(мм):" fontFamily="RobotoLight" fontSize="20"/>
			<s:Spacer width="100%"/>
			<s:NumericStepper minimum="0" maximum="100000" snapInterval="1" stepSize="1" value="@{lDiffRadius}"
							  change="{calcFromRadius()}"
							  fontSize="16"/>
		</s:HGroup>

		<s:Spacer height="20"/>
		<s:HGroup width="100%"  height="40" gap="20" verticalAlign="middle" horizontalAlign="right">
			<mdcomp:Button height="100%" label="Ok" styleName="primary" click="button1_clickHandler(event)"/>
			<mdcomp:Button height="100%" label="Отмена" styleName="primary" click="{close()}"/>
		</s:HGroup>

	</s:VGroup>

</s:SkinnablePopUpContainer>
