<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:config="com.photodispatcher.view.config.*">
	
	<fx:Script>
		<![CDATA[
			import com.photodispatcher.event.AsyncSQLEvent;
			import com.photodispatcher.model.Lab;
			import com.photodispatcher.model.LabDevice;
			import com.photodispatcher.model.Source;
			import com.photodispatcher.model.SourceType;
			import com.photodispatcher.model.dao.BaseDAO;
			import com.photodispatcher.model.dao.LabDeviceDAO;
			import com.photodispatcher.model.dao.SourceTypeDAO;
			import com.photodispatcher.util.ArrayUtil;
			
			import mx.collections.ArrayList;
			import mx.collections.IList;
			
			import spark.events.IndexChangeEvent;

			private var _currentItem:Lab;
			[Bindable]
			public function get currentItem():Lab{
				return _currentItem;
			}
			public function set currentItem(value:Lab):void{
				var arr:Array;
				_currentItem = value;
				typeListIdx=-1;
				isNoritsu=false;
				lstDevices.selectedIndex=-1;
				if(_currentItem){
					isNoritsu=_currentItem.src_type==SourceType.LAB_NORITSU;
					var stDao:SourceTypeDAO=new SourceTypeDAO();
					typeList=stDao.findAll(Source.LOCATION_TYPE_LAB);
					typeListIdx=ArrayUtil.searchItemIdx('id',_currentItem.src_type,typeList.toArray());
					//var dDao:LabDeviceDAO= new LabDeviceDAO();
					if(!_currentItem.devices) _currentItem.getDevices();
					devices.source=_currentItem.devices;
				}else{
					devices.source=[];
				}
			}
			[Bindable]
			private var typeList:IList;
			[Bindable]
			private var typeListIdx:int;
			[Bindable]
			private var isNoritsu:Boolean=false;

			[Bindable]
			private var devices:ArrayList= new ArrayList();

			protected function ddType_changeHandler(event:IndexChangeEvent):void{
				if(currentItem && ddType.selectedItem){
					currentItem.src_type=ddType.selectedItem.id;
					currentItem.changed=true;
					isNoritsu=currentItem.src_type==SourceType.LAB_NORITSU; 
				}
			}

			protected function btAddDevice_clickHandler(event:MouseEvent):void{
				if(!_currentItem || !_currentItem.loaded || !_currentItem.id) return;
				var dDao:LabDeviceDAO= new LabDeviceDAO();
				var dev:LabDevice= new LabDevice();
				dev.lab=_currentItem.id;
				dev.name='Новое устройство';
				dDao.addEventListener(AsyncSQLEvent.ASYNC_SQL_EVENT, onDevSave);
				dDao.save(dev);
			}
			private function onDevSave(e:AsyncSQLEvent):void{
				var dao:BaseDAO=e.target as BaseDAO;
				if(dao) dao.removeEventListener(AsyncSQLEvent.ASYNC_SQL_EVENT, onDevSave);
				if(e.result==AsyncSQLEvent.RESULT_COMLETED){
					devices.addItem(e.item);
					lstDevices.selectedItem=e.item;
				}
			}

			
			protected function btDelDevice_clickHandler(event:MouseEvent):void{
				if(!_currentItem || !_currentItem.loaded || !_currentItem.id || !lstDevices.selectedItem) return;
				var dDao:LabDeviceDAO= new LabDeviceDAO();
				dDao.addEventListener(AsyncSQLEvent.ASYNC_SQL_EVENT, onDevDel);
				dDao.remove(lstDevices.selectedItem.id);
			}
			private function onDevDel(e:AsyncSQLEvent):void{
				var dao:LabDeviceDAO=e.target as LabDeviceDAO;
				if(dao) dao.removeEventListener(AsyncSQLEvent.ASYNC_SQL_EVENT, onDevDel);
				if(e.result==AsyncSQLEvent.RESULT_COMLETED){
					devices.source=dao.getByLab(_currentItem.id);
				}
			}
			
		]]>
	</fx:Script>
	<s:HGroup width="100%" height="100%" gap="10">
		<s:Form height="100%">
			<s:layout>
				<s:FormLayout gap="-12"/>
			</s:layout>
			
			<s:FormItem label="Тип" required="true" enabled="{!currentItem.loaded}" >
				<s:DropDownList id="ddType" labelField="name" dataProvider="{typeList}" selectedIndex="{typeListIdx}" change="ddType_changeHandler(event)" width="200"/>
			</s:FormItem>
			<s:FormItem label="Наименование">
				<s:TextInput id="tiName" text="@{currentItem.name}" change="{currentItem.changed=true}" width="200"/>
			</s:FormItem> 
			<s:FormItem label="Hot folder">
				<s:TextInput id="tiHot" text="@{currentItem.hot}" change="{currentItem.changed=true}" width="200"/>
			</s:FormItem>
			<s:FormItem label="Hot folder NHF" enabled="{isNoritsu}">
				<s:TextInput id="tiHotNsf" text="@{currentItem.hot_nfs}" change="{currentItem.changed=true}" width="200"/>
			</s:FormItem> 
			<s:FormItem label="Автопечать">
				<s:CheckBox selected="@{currentItem.is_managed}" change="{currentItem.changed=true}"/>
			</s:FormItem> 
			<s:FormItem label="Очередь печати (мин)" >
				<s:NumericStepper value="@{currentItem.queue_limit}" minimum="0" maximum="240" stepSize="10"
								  enabled="{currentItem.is_managed}" change="{currentItem.changed=true}"/>
			</s:FormItem> 
			<s:FormItem label="Активна">
				<s:CheckBox id="chbOnline" selected="@{currentItem.is_active}" change="{currentItem.changed=true}"/>
			</s:FormItem> 
		</s:Form>
		<s:VGroup height="100%" gap="5" enabled="{currentItem.loaded}">
			<s:Label text="Устройства"/>
			<s:List id="lstDevices" dataProvider="{devices}" labelField="name"/>
			<s:HGroup gap="10" horizontalAlign="right">
				<s:Button id="btAddDevice" label="+" click="btAddDevice_clickHandler(event)" width="30"/>
				<s:Button id="btDelDevice" label="-" click="btDelDevice_clickHandler(event)" width="30"/>
			</s:HGroup>
		</s:VGroup>
		<config:LabDeviceEdit width="100%" height="100%" currentItem="{lstDevices.selectedItem}" visible="{lstDevices.selectedItem!=null}"/>
	</s:HGroup>
</s:Group>
