<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="group1_creationCompleteHandler(event)">

	<fx:Script>
		<![CDATA[
			import com.jxl.chatserver.vo.ClientVO;
			import com.photodispatcher.context.Context;
			import com.photodispatcher.event.IMRunerEvent;
			import com.photodispatcher.model.AppConfig;
			import com.photodispatcher.model.dao.AppConfigDAO;
			import com.photodispatcher.model.dao.BaseDAO;
			import com.photodispatcher.shell.IMRuner;
			import com.photodispatcher.util.StrUtil;
			
			import mx.collections.ArrayList;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			[Bindable]
			private var serverIP:String;

			[Bindable]
			private var workFolder:String;
			[Bindable]
			private var prtPath:String;
			[Bindable]
			private var imPath:String;
			[Bindable]
			private var imRespond:String;
			[Bindable]
			private var imThreads:int=0;
			[Bindable]
			private var imPathValid:Boolean=false;
			[Bindable]
			private var pdfPageLimit:int=100;
			
			
			protected function group1_creationCompleteHandler(event:FlexEvent):void{
				var so:SharedObject = SharedObject.getLocal('appProps','/');
				if (so.size>0){
					imPath = so.data.imPath;
					imThreads=so.data.imThreads;
					serverIP=so.data.serverIP;
					workFolder=so.data.workFolder;
					prtPath=so.data.prtPath;
					if(!prtPath) prtPath=workFolder;
					if(so.data.pdfPageLimit) pdfPageLimit=so.data.pdfPageLimit;
					if(!pdfPageLimit) pdfPageLimit=100;
					var helpMode:int=so.data.helpMode;
					if(!helpMode) helpMode=ClientVO.TYPE_BUILDER;
					var idx:int=0;
					var i:int;
					for (i=0; i <ddHelpMode.dataProvider.length;i++){
						if(ddHelpMode.dataProvider.getItemAt(i).id==helpMode){
							idx=i;
							break;
						}
					}
					ddHelpMode.selectedIndex=idx;
				}
				
				if(imPath) pingIM();
			}
			
			public function refresh():void{
				imPath=Context.getAttribute('imPath');
				imThreads=Context.getAttribute('imThreads');
				serverIP=Context.getAttribute('serverIP');
				workFolder=Context.getAttribute('workFolder');
				prtPath=Context.getAttribute('prtPath');
				if(imPath) pingIM();
			}
			
			private function pingIM():void{
				if(imPath){
					var f:File=File.applicationStorageDirectory;
					//var im:IMRuner= new IMRuner(imPath,Context.getAttribute('workFolder'));
					var im:IMRuner= new IMRuner(imPath,f.nativePath);
					im.addEventListener(IMRunerEvent.IM_COMPLETED, onImPing);
					im.ping(imPath);
				}
			}
			private function onImPing(e:IMRunerEvent):void{
				var im:IMRuner=e.target as IMRuner;
				im.removeEventListener(IMRunerEvent.IM_COMPLETED, onImPing);
				imPathValid=!e.hasError;
				imRespond=e.error;
			}

			protected function btIMFolder_clickHandler(event:MouseEvent):void{
				//browse
				var fl:File = File.userDirectory;
				fl.addEventListener(Event.SELECT,imFolderSet);
				fl.browseForDirectory('Выбирите папку ImageMagick');
			}
			protected function imFolderSet(event:Event):void{
				imPathValid=false;
				var fl:File = event.target as File;
				if(fl){
					fl.removeEventListener(Event.SELECT,imFolderSet);
					imPath=fl.nativePath;

					//save last selection
					var so:SharedObject = SharedObject.getLocal('appProps','/');
					so.data.imPath = fl.nativePath;
					so.flush();  
					Context.setAttribute("imPath", imPath);

					if(imPath) pingIM();
				}
			}
			
			protected function tiIMThreads_changeHandler(event:TextOperationEvent):void{
				imThreads=int(tiIMThreads.text);
				//save last selection
				var so:SharedObject = SharedObject.getLocal('appProps','/');
				so.data.imThreads = imThreads;
				so.flush();  
				Context.setAttribute("imThreads", imThreads);
			}
			
			protected function tiServerIP_changeHandler(event:TextOperationEvent):void{
				//save last selection
				var so:SharedObject = SharedObject.getLocal('appProps','/');
				so.data.serverIP = serverIP;
				so.flush();  
				Context.setAttribute("serverIP", serverIP);
			}
			
			protected function btWrkFolder_clickHandler(event:MouseEvent):void{
				//browse
				var fl:File = File.userDirectory;
				fl.addEventListener(Event.SELECT,wrkFolderSet);
				fl.browseForDirectory('Выбирите рабочую папку');
			}
			protected function wrkFolderSet(event:Event):void{
				var fl:File = event.target as File;
				if(fl){
					fl.removeEventListener(Event.SELECT,wrkFolderSet);
					workFolder=fl.nativePath;
					
					//save last selection
					var so:SharedObject = SharedObject.getLocal('appProps','/');
					so.data.workFolder = fl.nativePath;
					so.flush();  
					Context.setAttribute("workFolder", workFolder);
					
					//if(imPath) pingIM();
				}
			}

			protected function btPrtFolder_clickHandler(event:MouseEvent):void{
				//browse
				var fl:File = File.userDirectory;
				fl.addEventListener(Event.SELECT,prtFolderSet);
				fl.browseForDirectory('Выбирите папку для подготовленных заказов');
			}
			protected function prtFolderSet(event:Event):void{
				var fl:File = event.target as File;
				if(fl){
					fl.removeEventListener(Event.SELECT,prtFolderSet);
					//conf.wrk_path=fl.nativePath;
					prtPath=fl.nativePath;;
					//save last selection
					var so:SharedObject = SharedObject.getLocal('appProps','/');
					so.data.prtPath = prtPath;
					so.flush();  
					Context.setAttribute("prtPath", prtPath);
				}
			}

			
			protected function nsPdfPageLimit_changeHandler(event:Event):void{
				var newVal:int=nsPdfPageLimit.value;
				if(!newVal) return;
				pdfPageLimit=newVal;
				var so:SharedObject = SharedObject.getLocal('appProps','/');
				so.data.pdfPageLimit = pdfPageLimit;
				so.flush();  
				Context.setAttribute("pdfPageLimit", pdfPageLimit);
			}
			
			protected function ddHelpMode_changeHandler(event:IndexChangeEvent):void{
				if(ddHelpMode.selectedItem){
					var mode:int=ddHelpMode.selectedItem.id;
					var so:SharedObject = SharedObject.getLocal('appProps','/');
					so.data.helpMode = mode;
					so.flush();  
					Context.setAttribute("helpMode", mode);
				}
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup>
		<s:Form>
			<s:layout>
				<s:FormLayout gap="-10"/>
			</s:layout>
			
			<s:FormItem label="Рабочая папка">
				<mx:HBox>
					<s:TextInput id="tiWrkFolder" text="{workFolder}" editable="false" width="300"/>
					<s:Button id="btWrkFolder" label="..." click="btWrkFolder_clickHandler(event)"/>
				</mx:HBox>
			</s:FormItem> 

			<s:FormItem label="Папка подготовленных заказов">
				<mx:HBox>
					<s:TextInput id="tiPrtFolder" text="{prtPath}" editable="false" width="300"/>
					<s:Button id="btPrtFolder" label="..." click="btPrtFolder_clickHandler(event)"/>
				</mx:HBox>
			</s:FormItem> 

			<s:FormItem label="IP Сервера">
				<s:TextInput id="tiServerIP" text="@{serverIP}" editable="true"  width="300" change="tiServerIP_changeHandler(event)"/>
			</s:FormItem> 

			<s:FormItem label="Режим при старте">
				<s:DropDownList id="ddHelpMode" dataProvider="{new ArrayList(ClientVO.HELPER_MODES)}" change="ddHelpMode_changeHandler(event)"/>
			</s:FormItem> 

			<s:FormItem label="Папка ImageMagick">
				<s:VGroup gap="3">
					<s:VGroup gap="3">
						<s:HGroup gap="5">
							<s:TextInput id="tiIMFolder" text="{imPath}" editable="false" width="300" color="{imPathValid?0:0xff0000}"/>
							<s:Button id="btIMFolder" label="..." click="btIMFolder_clickHandler(event)"/>
						</s:HGroup>
						<s:Label text="{imRespond}" color="{imPathValid?0:0xff0000}"/>
					</s:VGroup>
					<s:HGroup gap="5" verticalAlign="baseline">
						<s:Label text="Кол потоков"/>
						<s:TextInput id="tiIMThreads" text="{imThreads.toString()}" restrict="0123456789" width="50" change="tiIMThreads_changeHandler(event)"/>
					</s:HGroup>
				</s:VGroup>
			</s:FormItem> 
			<s:FormItem label="Кол-во страниц в PDF файле">
				<s:NumericStepper id="nsPdfPageLimit" value="@{pdfPageLimit}" 
								  minimum="0" maximum="200" snapInterval="10" width="50" change="nsPdfPageLimit_changeHandler(event)"/>
			</s:FormItem> 

		</s:Form>
	</s:VGroup>
</s:Group>
