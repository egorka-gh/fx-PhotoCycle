<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:config="com.photodispatcher.view.config.*"
		 creationComplete="{init()}">
	
<fx:Script>
	<![CDATA[
		import com.photodispatcher.context.Context;
		import com.photodispatcher.event.AsyncSQLEvent;
		import com.photodispatcher.model.PrintGroupSynonym;
		import com.photodispatcher.model.mysql.entities.SourceType;
		import com.photodispatcher.model.dao.PrintGroupSynonymDAO;
		
		import mx.collections.ArrayCollection;
		
		[Bindable]
		private var currentList:ArrayCollection=new ArrayCollection();
		[Bindable]
		private var paperFilterList:ArrayCollection;
		[Bindable]
		private var pdfFilterList:ArrayCollection;

		private function addItem():void{
			var newPgs:PrintGroupSynonym= new PrintGroupSynonym();
			
			newPgs.src_type=SourceType.SRC_FOTOKNIGA;
			
			//fill vs filter vals
			if(tiSynonymFilter && tiSynonymFilter.text) newPgs.synonym=tiSynonymFilter.text;
			if(tiWidthFilter && tiWidthFilter.text) newPgs.width=int(tiWidthFilter.text);
			if(tiHeightFilter && tiHeightFilter.text) newPgs.height=int(tiHeightFilter.text);
			if(ddPaperFilter && ddPaperFilter.selectedIndex>0){
				newPgs.paper=ddPaperFilter.selectedItem.value;
				newPgs.paper_name=ddPaperFilter.selectedItem.label;
			}
			if(ddPDFFilter && ddPDFFilter.selectedIndex>0){
				newPgs.pdf=ddPDFFilter.selectedItem.value;
				newPgs.pdf_name=ddPDFFilter.selectedItem.label;
			}
			
			itemsGrid.addItem(newPgs);
		}

		private var itemsToSave:Array=[];
		private var saveRunning:Boolean=false;
		private function saveAll():void{
			var item:PrintGroupSynonym;
			for each (var o:Object in currentList){
				item=o as PrintGroupSynonym;
				if(item && (!item.loaded || item.changed)){
					itemsToSave.push(item);
				}
			}
			if(!saveRunning) saveNext();
		}
		private function saveNext():void{
			if(!itemsToSave || itemsToSave.length==0){
				//completed
				return;
			}
			saveRunning=true;
			var o:Object=itemsToSave.shift();
			var dao:PrintGroupSynonymDAO=new PrintGroupSynonymDAO();
			dao.addEventListener(AsyncSQLEvent.ASYNC_SQL_EVENT, onSave);
			dao.save(o);
		}
		private function onSave(e:AsyncSQLEvent):void{
			var dao:PrintGroupSynonymDAO=e.target as PrintGroupSynonymDAO;
			if(dao) dao.removeEventListener(AsyncSQLEvent.ASYNC_SQL_EVENT, onSave);
			saveRunning=itemsToSave && itemsToSave.length>0;
			if(e.result==AsyncSQLEvent.RESULT_COMLETED){
				saveNext();
			}else{
				saveRunning=false;
			}
		}

		private function refresh():void{
			var dao:PrintGroupSynonymDAO=new PrintGroupSynonymDAO();
			currentList.source=dao.findAllArray(SourceType.SRC_FOTOKNIGA);//Fotokniga
		}

		private function init():void{
			Context.initAttributeLists();
			paperFilterList=Context.getAttribute('paperList');
			pdfFilterList=Context.getAttribute('pdfList');
			currentList.filterFunction=gridFilter;
			refresh();
		}
		
		private function applyFilter():void{
			currentList.refresh();
		}

		private function gridFilter(item:Object):Boolean{
			var synonym:PrintGroupSynonym=item as PrintGroupSynonym;
			if(!synonym) return false;
			if(tiSynonymFilter && tiSynonymFilter.text && synonym.synonym.substr(0,tiSynonymFilter.text.length)!=tiSynonymFilter.text) return false;
			if(tiWidthFilter && tiWidthFilter.text && synonym.width.toString().substr(0,tiWidthFilter.text.length)!=tiWidthFilter.text) return false;
			if(tiHeightFilter && tiHeightFilter.text && synonym.height.toString().substr(0,tiHeightFilter.text.length)!=tiHeightFilter.text) return false;
			if(ddPaperFilter && ddPaperFilter.selectedIndex>0 && synonym.paper!=ddPaperFilter.selectedItem.value) return false;
			if(ddPDFFilter && ddPDFFilter.selectedIndex>0 && synonym.pdf!=ddPDFFilter.selectedItem.value) return false;
			return true;
		}

	]]>
</fx:Script>
	
	<s:VGroup gap="10" width="100%" height="100%">
		<s:HGroup id="gFilters" width="100%" gap="5" horizontalAlign="left" verticalAlign="baseline">
			<s:Label text="Фильтрация" fontWeight="bold"/>

			<s:Spacer width="5"/>
			<s:Label text="Папка"/>
			<s:TextInput id="tiSynonymFilter" width="100" change="{applyFilter()}"/>
			
			<s:Spacer width="5"/>
			<s:Label text="Ширина"/>
			<s:TextInput id="tiWidthFilter" width="100" restrict="0123456789" change="{applyFilter()}"/>
			
			<s:Spacer width="5"/>
			<s:Label text="Длина"/>
			<s:TextInput id="tiHeightFilter" width="100" restrict="0123456789" change="{applyFilter()}"/>
			
			<s:Spacer width="5"/>
			<s:Label text="Бумага"/>
			<s:DropDownList id="ddPaperFilter" dataProvider="{paperFilterList}" change="{applyFilter()}"/>

			<s:Spacer width="5"/>
			<s:Label text="PDF шаблон"/>
			<s:DropDownList id="ddPDFFilter" dataProvider="{pdfFilterList}" change="{applyFilter()}"/>
			
			<s:Spacer width="100%"/>
			<s:Button id="btRefresh" icon="assets/icon-refresh.gif" click="{refresh()}"
					  cornerRadius="4" width="22" height="22" baseline="4"/>
		</s:HGroup>
		<config:ItemsGrid id="itemsGrid" editable="true"
						  currentData="{currentList}" currentColumns="{PrintGroupSynonymDAO.gridColumns()}" 
						  width="100%" height="100%"/>
		<s:HGroup gap="10" verticalAlign="baseline" width="100%" horizontalAlign="left">
			<!--TODO implement DELETE-->
			<s:Button id="btAdd" label="Добавить" click="{addItem()}"/>
			<s:Button id="btSave" label="Сохранить" click="{saveAll()}"/>
			<s:Button id="btCancel" label="Отмена" click="{refresh()}"/>
		</s:HGroup>
	</s:VGroup>
</s:Group>
