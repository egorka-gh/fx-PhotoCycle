<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:config="com.photodispatcher.view.config.*"
		 creationComplete="{init()}"
		 >
	
	<fx:Script>
		<![CDATA[
			import com.photodispatcher.context.Context;
			import com.photodispatcher.model.LayerGroup;
			import com.photodispatcher.model.Layerset;
			import com.photodispatcher.model.SynonymCommon;
			import com.photodispatcher.model.dao.DictionaryCommonDAO;
			//import com.photodispatcher.model.dao.LayersetDAO;
			import com.photodispatcher.model.mysql.DbLatch;
			import com.photodispatcher.model.mysql.entities.Layer;
			import com.photodispatcher.model.mysql.entities.LayerSequence;
			import com.photodispatcher.model.mysql.entities.LayersetGroup;
			import com.photodispatcher.model.mysql.entities.SelectResult;
			import com.photodispatcher.model.mysql.services.TechPickerService;
			import com.photodispatcher.tech.picker.TechPicker;
			
			import flash.sampler.NewObjectSample;
			
			import org.granite.tide.Tide;
			import org.granite.tide.events.TideResultEvent;
			
			import spark.events.GridItemEditorEvent;
			import spark.events.GridSelectionEvent;
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			private var groupsAC:ArrayCollection;
			[Bindable]
			private var currTechGroup:LayersetGroup;
			[Bindable]
			private var layersAC:ArrayCollection;
			[Bindable]
			private var templatesAC:ArrayCollection;
			[Bindable]
			private var lGroupAC:ArrayCollection;//= new ArrayCollection();
			[Bindable]
			private var currLGroupIdx:int=-1;
			[Bindable]
			public var seqAC:ArrayCollection= new ArrayCollection();
			[Bindable]
			public var synAC:ArrayCollection= new ArrayCollection();

			[Bindable]
			private var currTemplate:Object;
			
			private var service:TechPickerService;

			private function init():void{
				lGroupAC= Context.getAttribute('layer_groupList');
				if(lGroupAC && lGroupAC.length>0) currLGroupIdx=0;
				service=Tide.getInstance().getContext().byType(TechPickerService,true) as TechPickerService;
				var latch:DbLatch= new DbLatch();
				latch.addLatch(service.loadLayersetGroups(onLoadLach),'groups');
				latch.addLatch(service.loadLayers(onLoadLach),'layers');
				latch.addLatch(service.loadLayersets(0,onLoadLach),'templates');
				
				latch.addEventListener(Event.COMPLETE, onInitComplite);
				latch.start();
			}
			
			private function onInitComplite(event:Event):void{
				var latch:DbLatch= event.target as DbLatch;
				if(latch){
					latch.removeEventListener(Event.COMPLETE,onInitComplite);
					if(latch.complite){
						
					}
				}
			}
			
			private function onLoadLach(event:TideResultEvent):void{
				var tag:String=event.asyncToken.tag; 
				var res:SelectResult=event.result as SelectResult;
				if(tag && res && res.complete){
					switch(tag){
						case 'groups':
							groupsAC=res.data as ArrayCollection;
							if(groupsAC && groupsAC.length>0) currTechGroup=groupsAC.getItemAt(0) as LayersetGroup;
							break;
						case 'layers':
							layersAC=res.data as ArrayCollection;
							break;
						case 'templates':
							templatesAC=res.data as ArrayCollection;
							break;
					}
				}
			}


			protected function btAddLayer_clickHandler(event:MouseEvent):void{
				var l:Layer= new Layer();
				l.name='Новый слой';
				layersAC.addItem(l);
				layersGrid.currentItem=l;
			}
			
			protected function btSaveLayers_clickHandler(event:MouseEvent):void{
				var l:Layer;
				var items:ArrayCollection= new ArrayCollection();
				for each(l in layersAC){
					if ((l.changed || !l.loaded) && l.id!=0 && l.id!=1){
						items.addItem(l);
					}
				}
				var latch:DbLatch=new DbLatch();
				latch.addEventListener(Event.COMPLETE, onLayersSave);
				latch.addLatch(service.persistLayers(items));
				latch.start();
				
			}
			private  function onLayersSave(event:Event):void{
				var latch:DbLatch= event.target as DbLatch;
				if(latch){
					latch.removeEventListener(Event.COMPLETE,onLayersSave);
					if(latch.complite){
						layersAC=latch.lastDataAC;
					}
				}
			}

			protected function btAddLayerset_clickHandler(event:MouseEvent):void{
				if(!currTechGroup || !currTechGroup.loaded) return;
				var ls:Layerset= new Layerset();
				ls.layerset_group=currTechGroup.id;
				if(currentState=='templates'){
					ls.name='Новый шаблон';
				}else if(currentState=='interlayers'){
					ls.name='Новая прослойка';
					ls.subset_type=1;
				}else{
					ls.name='Новый форзац';
					ls.subset_type=2;
				}
				templatesAC.addItem(ls);
				currTemplate=ls;
			}

			protected function btSaveLayersets_clickHandler(event:MouseEvent):void{
				var dao:LayersetDAO;
				var ls:Layerset;
				for each(ls in templatesAC){
					if (ls.changed || !ls.loaded){
						dao= new LayersetDAO;
						dao.save(ls);
					}
				}
			}
			
			protected function btEditLayerset_clickHandler(event:MouseEvent):void{
				var ls:Layerset= currTemplate as Layerset;
				if (!ls){
					return;
				}
				var arr:Array=[];
				var lg:LayerGroup;
				var newState:String;
				var dao:DictionaryCommonDAO;
				var sarr:Array;
				if(currentState=='templates'){
					newState='template_edit';
					lg= new LayerGroup(); lg.id=TechPicker.COMMAND_GROUP_BOOK_START; lg.name='Начало книги';
					arr.push(lg);
					lg= new LayerGroup(); lg.id=TechPicker.COMMAND_GROUP_BOOK_END; lg.name='Конец книги';
					arr.push(lg);
				}else if(currentState=='interlayers'){
					newState='interlayers_edit';
					lg= new LayerGroup(); lg.id=TechPicker.COMMAND_GROUP_BOOK_BETWEEN_SHEET; lg.name='Между разворотами';
					arr.push(lg);
					dao= new DictionaryCommonDAO();
					sarr= dao.getLayersetSynonyms(ls.id);
					synAC=new ArrayCollection(sarr);
				}else{
					newState='endpaper_edit';
					lg= new LayerGroup(); lg.id=TechPicker.COMMAND_GROUP_BOOK_START; lg.name='Начало книги';
					arr.push(lg);
					lg= new LayerGroup(); lg.id=TechPicker.COMMAND_GROUP_BOOK_END; lg.name='Конец книги';
					arr.push(lg);
					dao= new DictionaryCommonDAO();
					sarr= dao.getLayersetSynonyms(ls.id);
					synAC=new ArrayCollection(sarr);
				}
				lGroupAC= new ArrayCollection(arr);
				if(lGroupAC && lGroupAC.length>0) currLGroupIdx=0;
				
				if(!ls.loadSequence()) return;
				showSequence();
				currentState=newState;
			}
			
			private function showSequence():void{
				var a:Array=[];
				var ls:Layerset= currTemplate as Layerset;
				var idx:int=currLGroupIdx;
				var lg:LayerGroup=lGroupAC.getItemAt(idx) as LayerGroup; 
				if(ls && lg){
					switch(lg.id){
						case TechPicker.COMMAND_GROUP_BOOK_START:
							a=ls.sequenceStart;
							break;
						case TechPicker.COMMAND_GROUP_BOOK_BETWEEN_SHEET:
							a=ls.sequenceMiddle;
							break;
						case TechPicker.COMMAND_GROUP_BOOK_END:
							a=ls.sequenceEnd;
							break;
					}
				}
				seqAC= new ArrayCollection(a);
			}
			
			protected function btAddSeq_clickHandler(event:MouseEvent):void{
				var ls:Layerset= currTemplate as Layerset;
				if(!ls) return;
				var newIt:LayerSequence= new LayerSequence();
				newIt.layerset=ls.id;
				var idx:int=currLGroupIdx;
				if(idx==-1) return;
				var lg:LayerGroup=lGroupAC.getItemAt(idx) as LayerGroup;
				if(!lg) return;
				newIt.layer_group=lg.id;
				var seq:int=1;
				if(seqAC && seqAC.source && seqAC.source.length>0){
					var it:LayerSequence=seqAC.source[seqAC.source.length-1] as LayerSequence; 
					if(it) seq=it.seqorder+1;
				}
				newIt.seqorder=seq;
				seqAC.addItem(newIt);
				seqGrid.currentItem=newIt;
			}
			
			protected function btDelSeq_clickHandler(event:MouseEvent):void{
				if(seqGrid && seqGrid.currentItem){
					var idx:int= seqAC.getItemIndex(seqGrid.currentItem);
					if(idx>-1){
						seqAC.removeItemAt(idx);
					}
				}
			}
			
			protected function btSaveSeq_clickHandler(event:MouseEvent):void{
				var ls:Layerset= currTemplate as Layerset;
				if(!ls) return;
				var idx:int=currLGroupIdx;
				if(idx==-1) return;
				var lg:LayerGroup=lGroupAC.getItemAt(idx) as LayerGroup;
				if(!lg) return;
				/*
				var dao:LayerSequenceDAO= new LayerSequenceDAO();
				dao.updateBatch(seqAC.source, ls.id, lg.id);
				*/
				var latch:DbLatch=new DbLatch();
				latch.addEventListener(Event.COMPLETE, onSequenceSave);
				latch.addLatch(service.persistSequence(seqAC, ls.id, lg.id));
				latch.start();
				
			}
			private  function onSequenceSave(event:Event):void{
				var latch:DbLatch= event.target as DbLatch;
				if(latch){
					latch.removeEventListener(Event.COMPLETE,onSequenceSave);
					if(latch.complite){
						seqAC=latch.lastDataAC;
					}
				}
			}

			
			private function detectState():void{
				var tDao:LayersetDAO= new LayersetDAO();
				switch(tbView.selectedIndex){
					case 0:
						currentState='tech_groups';
						break;
					case 1:
						currentState='layers';
						break;
					case 2:
						templatesAC=tDao.findAll();
						templatesAC.filterFunction=filterTemplates;
						templatesAC.refresh();
						currentState='templates';
						break;
					case 3:
						templatesAC=tDao.findAll(1);
						templatesAC.filterFunction=filterTemplates;
						templatesAC.refresh();
						currentState='interlayers';
						break;
					case 4:
						templatesAC=tDao.findAll(2);
						templatesAC.filterFunction=filterTemplates;
						templatesAC.refresh();
						currentState='endpaper';
						break;
				}
			}
			
			private function filterTemplates(item:Object):Boolean{
				if(!currTechGroup) return false;
				var s:Layerset=item as Layerset;
				if(!s) return false;
				if(s.layerset_group != currTechGroup.id) return false;
				return true;
			}
			
			private function applyTemplatesFilter():void{
				if(templatesAC) templatesAC.refresh();
			}

			protected function btAddSynonym_clickHandler(event:MouseEvent):void{
				var ls:Layerset= currTemplate as Layerset;
				if(!ls) return;
				var newIt:SynonymCommon= new SynonymCommon();
				newIt.item_id=ls.id;
				synAC.addItem(newIt);
				synGrid.currentItem=newIt;
			}
			
			protected function btSaveSynonym_clickHandler(event:MouseEvent):void{
				var dao:DictionaryCommonDAO;
				var ls:SynonymCommon;
				for each (ls in synAC){
					if(ls.changed || !ls.loaded){
						dao= new DictionaryCommonDAO();
						dao.saveLayersetSynonym(ls);
					}
				}
			}
		
			protected function cbGroup_changeHandler(event:IndexChangeEvent):void{
				currLGroupIdx=cbGroup.selectedIndex;
				showSequence();
			}
			

			protected function btAddLayerGrp_clickHandler(event:MouseEvent):void{
				var l:LayersetGroup= new LayersetGroup();
				l.name='Новя группа';
				groupsAC.addItem(l);
				groupsGrid.currentItem=l;
			}
			
			protected function btSaveLayersGrp_clickHandler(event:MouseEvent):void{
				//var dao:LayersetGroupDAO;
				var l:LayersetGroup;
				var items:ArrayCollection= new ArrayCollection();
				for each(l in groupsAC){
					if ((l.changed || !l.loaded) && l.id!=0 ){
						items.addItem(l);
					}
				}
				if(items.length==0) return;
				var latch:DbLatch=new DbLatch();
				latch.addEventListener(Event.COMPLETE, onLayersetGroupSave);
				latch.addLatch(service.persistLayers(items));
				latch.start();
				
			}
			private  function onLayersetGroupSave(event:Event):void{
				var latch:DbLatch= event.target as DbLatch;
				if(latch){
					latch.removeEventListener(Event.COMPLETE,onLayersetGroupSave);
					if(latch.complite){
						groupsAC=latch.lastDataAC;
						if(groupsAC && groupsAC.length>0) currTechGroup=groupsAC.getItemAt(0) as LayersetGroup;
					}
				}
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="tech_groups"/>
		<s:State name="layers"/>
		<s:State name="templates" stateGroups="temp_view"/>
		<s:State name="interlayers" stateGroups="temp_view"/>
		<s:State name="endpaper"  stateGroups="temp_view"/>
		<s:State name="template_edit" stateGroups="temp_edit"/>
		<s:State name="interlayers_edit" stateGroups="temp_edit"/>
		<s:State name="endpaper_edit" stateGroups="temp_edit"/>
	</s:states>

	<s:VGroup width="100%" height="100%" gap="5">
		<s:TabBar id="tbView" height="20" change="{detectState()}">
			<mx:ArrayCollection>
				<fx:String>Технологии</fx:String> 
				<fx:String>Слои</fx:String> 
				<fx:String>Шаблоны</fx:String> 
				<fx:String>Прослойки</fx:String> 
				<fx:String>Форзацы</fx:String> 
			</mx:ArrayCollection>
		</s:TabBar>
		<s:Spacer height="5"/>
		
		<config:ItemsGrid id="groupsGrid" includeIn="tech_groups" editable="true" currentData="{groupsAC}" currentColumns="{LayersetGroup.gridColumns()}" 
						  width="200" height="100%" >
			<config:lockRows>
				<fx:Object >
					<fx:parametr>id</fx:parametr>
					<fx:values>[0]</fx:values>
				</fx:Object>
			</config:lockRows>
		</config:ItemsGrid>
		<s:HGroup gap="10" includeIn="tech_groups" width="200" horizontalAlign="right">
			<s:Button id="btAddLayerGrp" label="Добавить" click="btAddLayerGrp_clickHandler(event)"/>
			<s:Button id="btSaveLayersGrp" label="Сохранить" click="btSaveLayersGrp_clickHandler(event)"/>
		</s:HGroup>
		
		<config:ItemsGrid id="layersGrid" includeIn="layers" editable="true" currentData="{layersAC}" currentColumns="{Layer.gridColumns()}" 
						  width="200" height="100%" >
			<config:lockRows>
				<fx:Object >
					<fx:parametr>id</fx:parametr>
					<fx:values>[0,1,2]</fx:values>
				</fx:Object>
			</config:lockRows>
		</config:ItemsGrid>
		<s:HGroup gap="10" includeIn="layers" width="200" horizontalAlign="right">
			<s:Button id="btAddLayer" label="Добавить" click="btAddLayer_clickHandler(event)"/>
			<s:Button id="btSaveLayers" label="Сохранить" click="btSaveLayers_clickHandler(event)"/>
		</s:HGroup>
		
		<s:VGroup gap="5" height="100%" includeIn="temp_view">
			<s:HGroup gap="5" verticalAlign="baseline">
				<s:Label text="Технология"/>
				<s:DropDownList dataProvider="{groupsAC}" selectedItem="@{currTechGroup}" change="{applyTemplatesFilter()}" 
								labelField="name" width="100"/>
			</s:HGroup>
			<config:ItemsGrid id="templatesGrid" editable="true" 
							  currentData="{templatesAC}" 
							  currentColumns="{Layerset.gridColumns()}" 
							  currentColumns.interlayers="{Layerset.gridColumns(1)}"
							  currentColumns.endpaper="{Layerset.gridColumns(2)}"
							  currentItem="@{currTemplate}"
							  height="100%"/>
			<s:HGroup gap="10" width="100%" horizontalAlign="right">
				<s:Button id="btAddLayerset" label="Добавить" click="btAddLayerset_clickHandler(event)"/>
				<s:Button id="btSaveLayersets" label="Сохранить" click="btSaveLayersets_clickHandler(event)"/>
				<s:Button id="btEditLayerset" label="Редактировать" enabled="{currTemplate &amp;&amp; currTemplate.loaded}"
						  click="btEditLayerset_clickHandler(event)"/>
			</s:HGroup>
		</s:VGroup>
		<s:Label text="{currTemplate.name}" fontWeight="bold" includeIn="temp_edit"/>
		<s:HGroup gap="15" includeIn="temp_edit"  paddingLeft="10" width="100%" height="450" verticalAlign="bottom">
			<s:VGroup height="100%" width="250" gap="10" includeIn="interlayers_edit, endpaper_edit">
				<s:Label text="Синонимы" fontWeight="bold"/>
				<config:ItemsGrid id="synGrid" editable="true" 
								  currentData="{synAC}" currentColumns="{SynonymCommon.gridColumns()}"
								  width="100%" height="100%"/>
				<s:HGroup gap="10" verticalAlign="baseline" width="100%" horizontalAlign="right">
					<s:Button id="btAddSynonym" label="Добавить" click="btAddSynonym_clickHandler(event)"/>
					<s:Button id="btSaveSynonym" label="Сохранить" click="btSaveSynonym_clickHandler(event)"/>
				</s:HGroup>
			</s:VGroup>
			<s:VGroup height="100%" width="250" gap="10" enabled="{currTemplate &amp;&amp; !currTemplate.is_passover}">
				<s:Label text="Подборка" fontWeight="bold"/>
				<s:HGroup gap="5" verticalAlign="baseline" width="100%">
					<s:Label text="Группа"/>
					<s:ComboBox id="cbGroup" dataProvider="{lGroupAC}" selectedIndex="{currLGroupIdx}" 
								labelField="name" width="100%" change="cbGroup_changeHandler(event)"/>
				</s:HGroup>
				<config:ItemsGrid id="seqGrid" editable="true" 
								  currentData="{seqAC}" currentColumns="{LayerSequence.gridColumns()}"
								  width="100%" height="100%"/>
				<s:HGroup gap="10" verticalAlign="baseline" width="100%" horizontalAlign="right">
					<s:Button id="btAddSeq" label="Добавить" click="btAddSeq_clickHandler(event)"/>
					<s:Button id="btDelSeq" label="Удалить"  click="btDelSeq_clickHandler(event)"/>
					<s:Button id="btSaveSeq" label="Сохранить"  click="btSaveSeq_clickHandler(event)"/>
				</s:HGroup>
			</s:VGroup>
			<!--<s:VGroup height="100%" width="100%" gap="10" includeIn="template_edit">
				<s:HGroup width="100%" verticalAlign="baseline">
					<s:Label text="Список алиасов"/>
					<s:CheckBox/>
				</s:HGroup>
				<s:HGroup gap="10" width="100%" height="100%">
					<s:VGroup gap="5" width="200" height="100%">
						<s:Label text="Разрешен для алиасов"/>
						<s:List id="allowLst" width="100%" height="100%" labelField="synonym"/>
					</s:VGroup>
					<s:VGroup height="100%" verticalAlign="middle">
						<s:Button id="btAddAli" label="&#60;"  toolTip="Добавить" />
						<s:Button id="btAddAliAll" label="&#60;&#60;" toolTip="Добавить все" />
						<s:Button id="btDelAli" label="&#62;" toolTip="Удалить" />
						<s:Button id="btDelAliAll" label="&#62;&#62;" toolTip="Удалить все" />
					</s:VGroup>
					<s:VGroup gap="5" width="100%" height="100%" maxWidth="300">
						<s:Label text="Исключен для алиасов"/>
						<s:HGroup width="100%" gap="5" horizontalAlign="left" verticalAlign="baseline">
							<s:Label text="Фильтрация"/>
							<s:TextInput id="tiSynonymFilter" width="100%"/>
						</s:HGroup>
						<config:ItemsGrid id="disAllowLst" width="100%" height="100%" 
										  editable="false" currentColumns="{BookSynonymDAO.gridColumns(true)}"/>
					</s:VGroup>
				</s:HGroup>
				<s:HGroup width="100%" maxWidth="600" gap="10" horizontalAlign="right">
					<s:Button id="btSaveAlias" label="Сохранить"  />
					<s:Button label="В список шаблонов" click="detectState()"/>
				</s:HGroup>
			</s:VGroup>-->
			<s:Button label="В список шаблонов" click="detectState()"/>
		</s:HGroup>
	</s:VGroup>
</s:Group>
